<UserControl x:Class="AIC.UserPage.Views.MenuSetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AIC.UserPage"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"  
             xmlns:page="clr-namespace:Wpf.PageNavigationControl;assembly=Wpf.PageNavigationControl"
             xmlns:command="clr-namespace:AIC.Core.ExCommand;assembly=AIC.Core"
             xmlns:convert="clr-namespace:AIC.UserPage.Converters"
             prism:ViewModelLocator.AutoWireViewModel="True"
             Style="{DynamicResource AsyncWorkUserControlStyle}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AIC.Resources;component/Themes/ScrollBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <convert:IntStringConverter x:Key="intStringConverter"/>
            <convert:IntIconConverter x:Key="intIconConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>             
        <StackPanel Grid.Row="0" Orientation="Horizontal" >
            <TextBlock Text="{DynamicResource serverIP}" Margin="4,0,0,0" VerticalAlignment="Center"/>
            <ComboBox Width="200" ItemsSource="{Binding ServerIPCategory}" SelectedItem="{Binding ServerIP}" Style="{DynamicResource VirtualisedMetroComboBox}" VerticalAlignment="Center" IsEditable="False" Margin="4,0,0,0"/>
            <TextBlock Text="{DynamicResource name}" Margin="4,0,0,0" VerticalAlignment="Center"/>
            <TextBox Text="{Binding SearchName, Mode=OneWayToSource}" Margin="4,0,0,0" Style="{DynamicResource MetroTextBox}" Width="200" VerticalAlignment="Center"/>
            <Button  Command="{Binding QueryCommand}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Stretch="None" Source="/AIC.Resources;component/Images/search.png"  />
                        <TextBlock Text="{DynamicResource search}" VerticalAlignment="Center" />                      
                    </StackPanel>
                </Button.Content>
            </Button>
            <TextBlock Text="{DynamicResource menuMenuManage}" VerticalAlignment="Center" Margin="20,0,0,0"/>
            <TextBox DataContext="{Binding ElementName=table, Path=SelectedItem}" Text="{Binding Path=Name}" Margin="4,0,0,0" Style="{DynamicResource MetroTextBox}" Width="200" VerticalAlignment="Center" IsReadOnly="True"/>
            <Button Command="{Binding AddCommand}" CommandParameter="{Binding SelectedItem, ElementName=table}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Stretch="None" Source="/AIC.Resources;component/Images/add.png"  />
                        <TextBlock Text="{DynamicResource add}" VerticalAlignment="Center" />
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=table}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Stretch="None" Source="/AIC.Resources;component/Images/pencil.png"  />
                        <TextBlock Text="{DynamicResource edit}" VerticalAlignment="Center" />
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedItem, ElementName=table}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Stretch="None" Source="/AIC.Resources;component/Images/delete3.png"  />
                        <TextBlock Text="{DynamicResource delete}" VerticalAlignment="Center" />
                    </StackPanel>
                </Button.Content>
            </Button>            
        </StackPanel>
        <DataGrid x:Name="table" Grid.Row="1" AutoGenerateColumns="False" FrozenColumnCount="1" IsReadOnly="True" ColumnWidth="*"
                  ItemsSource="{Binding T_MenuView}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding id}" MinWidth="100" ></DataGridTextColumn>
                <DataGridTextColumn Header="{DynamicResource name}" Binding="{Binding Name}" MinWidth="100" ></DataGridTextColumn>
                <!--<DataGridTextColumn Header="{DynamicResource code}" Binding="{Binding Code}" MinWidth="100" ></DataGridTextColumn>-->
                <!--<DataGridTextColumn Header="{DynamicResource type}" Binding="{Binding Type,Converter={StaticResource intStringConverter}}" MinWidth="100" ></DataGridTextColumn>-->
                <DataGridTemplateColumn Header="{DynamicResource showText}" MinWidth="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding InternalNumber,Converter={StaticResource intIconConverter}}"/>
                                <TextBlock Text="{Binding ShowText}" Margin="4,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>                
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" BorderThickness="0,0,0,0">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal" Width="Auto">
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0"/>
                                                    <TextBlock FontWeight="Bold" Text=":"/>
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                                    <TextBlock FontWeight="Bold" Text="条"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <Border BorderBrush="{DynamicResource AccentColorBrush2}" BorderThickness="2">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">

                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">

                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <!--<Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />-->
                </Style>
            </DataGrid.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=table}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <page:PageNavigation Name="pager" PageSizeList="{Binding PageSizeList}" PageSize="{Binding PageSize,Mode=TwoWay}" 
            TotalItems="{Binding TotalItems,Mode=TwoWay}" CurrentPage="{Binding CurrentPage,Mode=OneWayToSource}" Grid.Row="2">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentPageChanged">
                    <command:ExInvokeCommandAction Command="{Binding CurrentPageChangedComamnd}" CommandParameter="{Binding ElementName=pager}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </page:PageNavigation>
    </Grid>
</UserControl>
