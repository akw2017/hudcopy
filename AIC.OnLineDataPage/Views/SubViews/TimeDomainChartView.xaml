<view:ChartViewBase x:Class="AIC.OnLineDataPage.Views.SubViews.TimeDomainChartView"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                   xmlns:presentation="http://www.aicmonitor.com/Presentation"
                   xmlns:view="clr-namespace:AIC.OnLineDataPage.Views.SubViews" 
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
                   xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
                   xmlns:coreType="clr-namespace:AIC.CoreType;assembly=AIC.CoreType"
                   xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"   
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                   x:Name="timeDomainOnLineView"
                   RenderTransformOrigin="0.5,0.5"           
                   mc:Ignorable="d" 
                   d:DesignHeight="300" d:DesignWidth="300">
    <view:ChartViewBase.RenderTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </view:ChartViewBase.RenderTransform>
    <view:ChartViewBase.Resources>
        <core:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
        <DataTemplate x:Key="enumComboItemTemplate">
            <TextBlock Text="{Binding Path=., Converter={StaticResource ResourceKey=enumDescriptionConverter}}" />
        </DataTemplate>
        <core:BindingProxy x:Key="proxy" Data="{Binding}" />
        <core:EnumBooleanConverter x:Key="enumBooleanConverter" />
        <core:EnumToVisibilityConverter x:Key="enumToVisibilityConverter" Reverse="False"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF87CDEE"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#7F243859"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#FF20437E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnLoaded">
            <DoubleAnimation
              Storyboard.TargetName="timeDomainOnLineView"
              Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
              From="0.0" To="1.0" Duration="0:0:0.3"/>
            <DoubleAnimation
              Storyboard.TargetName="timeDomainOnLineView"
              Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
              From="0.0" To="1.0" Duration="0:0:0.3"/>
        </Storyboard>
    </view:ChartViewBase.Resources>
    <view:ChartViewBase.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="OnLoaded2_BeginStoryboard" Storyboard="{StaticResource OnLoaded}"/>
        </EventTrigger>
    </view:ChartViewBase.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Name="gridChart"  >
        </Grid>

        <TextBlock x:Name="txtValue" FontSize="16" Grid.Row="2"/>

        <StackPanel  VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal">
            <CheckBox x:Name="filterCheckBox" IsChecked="{Binding IsFilter}" VerticalAlignment="Center">
            </CheckBox>
            <xctk:DropDownButton x:Name="dropDownButton" Background="Transparent" Content="滤波" FontSize="16" VerticalAlignment="Center">
                <xctk:DropDownButton.DropDownContent>
                    <Grid Width="320">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <!--<RowDefinition Height="30"/>-->
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <!--<RadioButton Foreground="Black" Content="不滤波" Style="{StaticResource RadioButtonStyle}" IsChecked="{Binding Source={StaticResource proxy},Path=Data.Signal.FilterType,Converter={StaticResource enumBooleanConverter}, ConverterParameter=None}" VerticalAlignment="Center"/>-->
                            <RadioButton x:Name="bandPassRb" Style="{StaticResource RadioButtonStyle}" Foreground="Black" Content="带通" IsChecked="{Binding Source={StaticResource proxy},Path=Data.Signal.FilterType,Converter={StaticResource enumBooleanConverter}, ConverterParameter=BandPass}" VerticalAlignment="Center"/>
                            <RadioButton x:Name="highPassRb" Style="{StaticResource RadioButtonStyle}" Foreground="Black" Content="高通" IsChecked="{Binding Source={StaticResource proxy},Path=Data.Signal.FilterType,Converter={StaticResource enumBooleanConverter}, ConverterParameter=HighPass}" VerticalAlignment="Center"/>
                            <RadioButton x:Name="lowPassRb" Style="{StaticResource RadioButtonStyle}" Foreground="Black" Content="低通" IsChecked="{Binding Source={StaticResource proxy},Path=Data.Signal.FilterType,Converter={StaticResource enumBooleanConverter}, ConverterParameter=LowPass}" VerticalAlignment="Center"/>
                        </StackPanel>
                        <Grid Grid.Row="1" Margin="5,5,25,0" Visibility="{Binding Source={StaticResource proxy},Path=Data.Signal.FilterType,Converter={StaticResource enumToVisibilityConverter}, ConverterParameter={x:Static coreType:FilterType.BandPass},FallbackValue=Collapsed}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="通带衰减"/>
                            <xctk:DoubleUpDown Grid.Column="1" Minimum="0.01" Maximum="3" Increment="0.1" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.BPFilter.PassbandAttenuationDB}"/>
                            <Label Grid.Row="1" Content="阻带衰减"/>
                            <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Minimum="40" Maximum="120" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.BPFilter.StopbandAttenuationDB}"/>
                            <CheckBox Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Source={StaticResource proxy}, Path=Data.Signal.BPFilter.IsRPMBinding}" Foreground="Black" Grid.Row="2" Content="绑定转速" Grid.ColumnSpan="2" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding Source={StaticResource proxy}, Path=Data.Signal.BPFilter.BindRPMCommand}" CommandParameter="{Binding Source={StaticResource proxy},Path= Data.Signal.RPM}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding Source={StaticResource proxy}, Path=Data.Signal.BPFilter.UnBindRPMCommand}" CommandParameter="{Binding Source={StaticResource proxy},Path= Data.Signal.RPM}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <Label Grid.Row="3" Content="低逼近带通"/>
                            <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1" Minimum="0" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.BPFilter.BPPassBandFreLow}" />
                            <Label Grid.Row="4" Content="高逼近带通"/>
                            <xctk:DoubleUpDown Grid.Row="4" Grid.Column="1" Minimum="0" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.BPFilter.BPPassBandFreHigh}"/>
                            <Label Grid.Row="5" Content="过渡带宽"/>
                            <xctk:DoubleUpDown  Grid.Row="5" Grid.Column="1" Minimum="0" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.BPFilter.TransitionBandwidth}"/>
                            <UniformGrid Grid.Row="6" Grid.ColumnSpan="2">
                                <Button Content="保存" Margin="5" Command="{Binding Source={StaticResource proxy},Path=Data.Signal.BPFilter.SaveCommand}"/>
                                <Button Content="重置" Margin="5" Command="{Binding Source={StaticResource proxy},Path=Data.Signal.BPFilter.ResetCommand}"/>
                            </UniformGrid>
                        </Grid>
                        <Grid Grid.Row="1" Margin="5,5,25,0" Visibility="{Binding Source={StaticResource proxy},Path=Data.Signal.FilterType,Converter={StaticResource enumToVisibilityConverter}, ConverterParameter={x:Static coreType:FilterType.HighPass},FallbackValue=Collapsed}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="通带衰减"/>
                            <xctk:DoubleUpDown Grid.Column="1" Minimum="0.01" Maximum="3" Increment="0.1" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.HPFilter.PassbandAttenuationDB}"/>
                            <Label Grid.Row="1" Content="阻带衰减"/>
                            <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Minimum="40" Maximum="120" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.HPFilter.StopbandAttenuationDB}"/>
                            <CheckBox Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Source={StaticResource proxy}, Path=Data.Signal.HPFilter.IsRPMBinding,Mode=TwoWay}" Foreground="Black" Grid.Row="2" Content="绑定转速" Grid.ColumnSpan="2" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding Source={StaticResource proxy}, Path=Data.Signal.HPFilter.BindRPMCommand}" CommandParameter="{Binding Source={StaticResource proxy},Path= Data.Signal.RPM}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding Source={StaticResource proxy}, Path=Data.Signal.HPFilter.UnBindRPMCommand}" CommandParameter="{Binding Source={StaticResource proxy},Path= Data.Signal.RPM}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <Label Grid.Row="3" Content="通带"/>
                            <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1" Minimum="0" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.HPFilter.PassbandFre}"/>
                            <Label Grid.Row="4" Content="阻带"/>
                            <xctk:DoubleUpDown Grid.Row="4" Grid.Column="1" Minimum="0" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.HPFilter.StopbandFre}"/>
                            <UniformGrid Grid.Row="6" Grid.ColumnSpan="2">
                                <Button Content="保存" Margin="5" Command="{Binding Source={StaticResource proxy},Path=Data.Signal.HPFilter.SaveCommand}"/>
                                <Button Content="重置" Margin="5" Command="{Binding Source={StaticResource proxy},Path=Data.Signal.HPFilter.ResetCommand}"/>
                            </UniformGrid>
                        </Grid>
                        <Grid Grid.Row="1" Margin="5,5,25,0" Visibility="{Binding Source={StaticResource proxy},Path=Data.Signal.FilterType,Converter={StaticResource enumToVisibilityConverter}, ConverterParameter={x:Static coreType:FilterType.LowPass},FallbackValue=Collapsed}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="通带衰减"/>
                            <xctk:DoubleUpDown Grid.Column="1" Minimum="0.01" Maximum="3" Increment="0.1" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.LPFilter.PassbandAttenuationDB}"/>
                            <Label Grid.Row="1" Content="阻带衰减"/>
                            <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Minimum="40" Maximum="120" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.LPFilter.StopbandAttenuationDB}"/>
                            <CheckBox Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Source={StaticResource proxy}, Path=Data.Signal.LPFilter.IsRPMBinding,Mode=TwoWay}" Foreground="Black" Grid.Row="2" Content="绑定转速" Grid.ColumnSpan="2" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding Source={StaticResource proxy}, Path=Data.Signal.LPFilter.BindRPMCommand}" CommandParameter="{Binding Source={StaticResource proxy},Path= Data.Signal.RPM}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding Source={StaticResource proxy}, Path=Data.Signal.LPFilter.UnBindRPMCommand}" CommandParameter="{Binding Source={StaticResource proxy},Path= Data.Signal.RPM}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <Label Grid.Row="3" Content="通带"/>
                            <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1" Minimum="0" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.LPFilter.PassbandFre}"/>
                            <Label Grid.Row="4" Content="阻带"/>
                            <xctk:DoubleUpDown Grid.Row="4" Grid.Column="1" Minimum="0" Value="{Binding Source={StaticResource proxy},Path=Data.Signal.LPFilter.StopbandFre}"/>
                            <UniformGrid Grid.Row="6" Grid.ColumnSpan="2">
                                <Button Content="保存" Margin="5" Command="{Binding Source={StaticResource proxy},Path=Data.Signal.LPFilter.SaveCommand}"/>
                                <Button Content="重置" Margin="5" Command="{Binding Source={StaticResource proxy},Path=Data.Signal.LPFilter.ResetCommand}"/>
                            </UniformGrid>
                        </Grid>
                    </Grid>
                </xctk:DropDownButton.DropDownContent>
            </xctk:DropDownButton>
            <ComboBox IsEditable="False" ItemTemplate="{StaticResource ResourceKey=enumComboItemTemplate}" core:EnumHelper.Enum="{x:Type coreType:SignalPreProccessType}" SelectedItem="{Binding SignalPreProccessType}" Width="80" VerticalAlignment="Center" Background="Transparent" Margin="5,0,5,0">
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource VirtualisedMetroComboBox}" TargetType="{x:Type ComboBox}">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <CheckBox x:Name="fitViewCheckBox" VerticalAlignment="Center" IsChecked="True"/>
            <Button HorizontalAlignment="Right" Style="{StaticResource ButtonStyle}" Content="时域" Click="ScreenshotButton_Click" Margin="0,0,5,0">
                <Button.ToolTip>
                    <TextBlock Text="截图"/>
                </Button.ToolTip>
            </Button>
        </StackPanel>
    </Grid>
</view:ChartViewBase>
