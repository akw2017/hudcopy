<UserControl x:Class="AIC.PDA.Views.PDAEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AIC.PDA.Views"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:localControls="clr-namespace:AIC.PDA.Controls"
             xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
             xmlns:coreType="clr-namespace:AIC.CoreType;assembly=AIC.CoreType"
             xmlns:vm="clr-namespace:AIC.PDA.ViewModels"
             xmlns:domain="clr-namespace:AIC.Domain;assembly=AIC.Domain"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AIC.PDA;component/Resources/Card.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <core:EnumBooleanConverter x:Key="enumBooleanConverter"/>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>



            <vm:CardDataTemplateSelector x:Key="cardDataTemplateSelector" 
                                         AnalogInCardDataTemplate="{StaticResource AnalogCardDataTemplate}"
                                         DigitTachometerCardDataTemplate="{StaticResource DigitTachometerCardDataTemplate}"
                                         EddyCurrentDisplacementCardDataTemplate="{StaticResource EddyCurrentDisplacementCardDataTemplate}"
                                         EddyCurrentKeyPhaseCardDataTemplate="{StaticResource EddyCurrentKeyPhaseCardDataTemplate}"
                                         EddyCurrentTachometerCardDataTemplate="{StaticResource EddyCurrentTachometerCardDataTemplate}"
                                         IEPECardDataTemplate="{StaticResource IEPECardDataTemplate}"
                                         RelayCardDataTemplate="{StaticResource RelayCardDataTemplate}"/>
            <vm:CardEditingDataTemplateSelector x:Key="cardEditingDataTemplateSelector"
                                                AnalogInCardDataTemplate="{StaticResource AnalogCardEditingDataTemplate}" 
                                                DigitTachometerCardDataTemplate="{StaticResource DigitTachometerCardEditingDataTemplate}"
                                                EddyCurrentDisplacementCardDataTemplate="{StaticResource EddyCurrentDisplacementCardEditingDataTemplate}"
                                                EddyCurrentKeyPhaseCardDataTemplate="{StaticResource EddyCurrentKeyPhaseCardEditingDataTemplate}"
                                                EddyCurrentTachometerCardDataTemplate="{StaticResource EddyCurrentTachometerCardEditingDataTemplate}"
                                                IEPECardDataTemplate="{StaticResource IEPECard4EditingDataTemplate}" 
                                                RelayCardDataTemplate="{StaticResource RelayCardEditingDataTemplate}"/>
            <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
                <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
            </ItemsPanelTemplate>

            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Border x:Name="topLeftBorder" BorderBrush="#49FFFFFF" BorderThickness="2,2,0,0"/>
                                    <Border x:Name="bottomRightBorder" BorderBrush="#49000000" BorderThickness="0,0,2,2"/>
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="BorderBrush" TargetName="topLeftBorder" Value="#49000000"/>
                                    <Setter Property="BorderBrush" TargetName="bottomRightBorder" Value="#49FFFFFF"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CardListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Margin" Value="12,0,0,0"/>
                <Setter Property="Width" Value="117"/>
                <Setter Property="Height" Value="471"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueLightBrush}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <!--<Setter Property="core:CommandBehavior.Event" Value="PreviewMouseLeftButtonDown"/>
            <Setter Property="core:CommandBehavior.Command" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}},Path=DataContext.NavigateCardCommand}"/>
            <Setter Property="core:CommandBehavior.CommandParameter" Value="{Binding}"/>-->
                <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_PreviewMouseLeftButtonDown" />-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid x:Name="rootGrid">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <StackPanel x:Name="root">
                                    <StackPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </StackPanel.RenderTransform>
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5" >
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <Button x:Name="navigateBtn" Content="{Binding CardNum}" Height="50" IsEnabled="False" FontSize="26.667"
                                            Foreground="{DynamicResource Foreground}" Background="{StaticResource PrimaryHueDarkBrush}"
                                            Style="{StaticResource ButtonStyle1}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <ei:CallMethodAction MethodName="ChangeStateToChannel" TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PDAEditorView}}, Path=DataContext}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="IsEnabled" TargetName="navigateBtn" Value="True"/>
                                </Trigger>

                                <EventTrigger RoutedEvent="ListBoxItem.Selected">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rootGrid" 
                    						Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                    						To="-60" DecelerationRatio="1" Duration="0:0:0.25" AutoReverse="false" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ListBoxItem.Unselected">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rootGrid" 
                    							Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                    							To="0" DecelerationRatio="1" Duration="0:0:0.25" AutoReverse="false" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="root" 
                    						Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                    						To="-20" DecelerationRatio="1" Duration="0:0:0.25" AutoReverse="false" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="root" 
                    						Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                    						To="0" DecelerationRatio="1" Duration="0:0:0.25" AutoReverse="false" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="root" 
                                                             Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                             To="0" DecelerationRatio="1" Duration="0:0:0.25" AutoReverse="false" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                            </MultiTrigger>-->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4,1"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5">
                                    <ContentPresenter.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="DataTemplate2">
                <Grid>
                    <Rectangle Stroke="White" StrokeThickness="1" Width="100" Height="100" Margin="0" d:IsLocked="True"/>
                    <Path Data="M5.1666667,3.3333333 L55.587053,3.2747681 55.597661,4.7701749 23.166495,4.8336666 22.041318,5.9590836 14.583084,5.9590836 5.0841097,13.234909 z" HorizontalAlignment="Stretch" Height="10.979" Margin="0,-1.656,48.305,0" Stretch="Fill" Stroke="White" StrokeThickness="0.5" VerticalAlignment="Top" Width="Auto" Fill="White"/>
                    <Path Data="M5.1666667,3.3333333 L55.587053,3.2747681 55.597661,4.7701749 23.166495,4.8336666 22.041318,5.9590836 14.583084,5.9590836 5.1551528,13.191666 z" HorizontalAlignment="Right" Height="10.935" Margin="0,0,-21.532,20.402" Stretch="Fill" Stroke="White" StrokeThickness="0.5" VerticalAlignment="Bottom" Width="51.622" Fill="White" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                <SkewTransform AngleY="0" AngleX="0"/>
                                <RotateTransform Angle="-270"/>
                                <TranslateTransform X="0.058500000000002217" Y="0.058500000000002217"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Path Data="M95.875,6.25 L95.875,60.666667" HorizontalAlignment="Right" Height="Auto" Margin="0,5.917,3.292,38.666" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Stretch" Width="1"/>
                    <Ellipse Margin="21.5,22.25,20.75,19.25" Stroke="Red" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="50" Height="50"/>
                    <Ellipse Margin="25.375,26.5,24.625,23.5" Stroke="White" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30" Height="30"/>
                    <Ellipse Margin="47.875,49,47.125,46" Stroke="{x:Null}" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="5" Height="5" Fill="Red"/>
                    <Path Data="M50.5625,32.5 L50.5625,44.3125" Height="13.812" Margin="49.375,30,48.625,0" Stretch="Fill" Stroke="#FFFDFDFD" StrokeThickness="2" VerticalAlignment="Top" RenderTransformOrigin="0.5,1.554">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-45"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Path Data="M50.5625,32.5 L50.5625,44.3125" Height="13.812" Margin="49.375,30,48.625,0" Stretch="Fill" Stroke="#FFFDFDFD" StrokeThickness="2" VerticalAlignment="Top" RenderTransformOrigin="0.5,1.554">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="45"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Path Data="M50.5625,32.5 L50.5625,44.3125" Height="13.812" Margin="49.375,30,48.625,0" Stretch="Fill" Stroke="#FFFDFDFD" StrokeThickness="2" VerticalAlignment="Top" RenderTransformOrigin="0.5,1.554">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="135"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Path Data="M50.5625,32.5 L50.5625,44.3125" Height="13.812" Margin="49.375,30,48.625,0" Stretch="Fill" Stroke="#FFFDFDFD" StrokeThickness="2" VerticalAlignment="Top" RenderTransformOrigin="0.5,1.554">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-135"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </DataTemplate>
            <ItemsPanelTemplate x:Key="ItemsPanelTemplate2">
                <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
            </ItemsPanelTemplate>

            <LinearGradientBrush x:Key="Flat3DBorderBrush"
                         StartPoint="0.499,0" EndPoint="0.501,1">
                <GradientStop Color="#FFF" Offset="0" />
                <GradientStop Color="#DDD" Offset="0.01" />
                <GradientStop Color="#AAA" Offset="0.99" />
                <GradientStop Color="#888" Offset="1" />
            </LinearGradientBrush>

            <DataTemplate x:Key="PDADataTemplate">
                <Grid>
                    <StackPanel>
                        <Grid Background="{StaticResource PrimaryHueDarkBrush}">
                            <Button x:Name="navigateCardBtn" IsEnabled="False" Content="{Binding IP}" FontSize="26.667"
                                Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"  
                                Style="{DynamicResource ButtonStyle1}" 
                                Background="{DynamicResource PrimaryHueDarkBrush}"  >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ChangeStateToCard" TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PDAEditorView}}, Path=DataContext}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </Grid>
                        <Border Margin="0,3,0,0" BorderBrush="{DynamicResource PrimaryHueDarkBrush}" BorderThickness="1" Width="300" Height="300">
                            <Border x:Name="middleBoder" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="3"  >
                                <Border x:Name="innerBoder" BorderBrush="{DynamicResource PrimaryHueDarkBrush}" BorderThickness="1" Background="{DynamicResource PrimaryHueDarkBrush}">
                                    <Grid>
                                        <Border BorderBrush="#49000000" BorderThickness="2,2,0,0"/>
                                        <Border BorderBrush="#49FFFFFF" BorderThickness="0,0,2,2"/>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <StackPanel Grid.Row="1">
                                                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Grid.Row="1" Foreground="{DynamicResource Foreground}" VerticalAlignment="Center"><Run Text="MAC地址:"/><Run Text=" "/><Run Text="{Binding PDAMAC}"/></TextBlock>
                                                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Grid.Row="1" Foreground="{DynamicResource Foreground}" VerticalAlignment="Center"><Run Text="无线MAC地址:"/><Run Text=" "/><Run Text="{Binding MasterWirelessMAC}"/></TextBlock>
                                                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Grid.Row="1" Foreground="{DynamicResource Foreground}" VerticalAlignment="Center"><Run Text="采样点数:"/><Run Text=" "/><Run Text="{Binding SamplePoint}"/></TextBlock>
                                                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Grid.Row="1" Foreground="{DynamicResource Foreground}" VerticalAlignment="Center"><Run Text="采样频率:"/><Run Text=" "/><Run Text="{Binding SampleFre}"/></TextBlock>
                                                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Grid.Row="1" Foreground="{DynamicResource Foreground}" VerticalAlignment="Center"><Run Text="采样类型:"/><Run Text=" "/><Run Text="{Binding SampleType}"/></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <Button Command="{Binding DataContext.DownloadingCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PDAEditorView}}}" CommandParameter="{Binding}" Width="32" Height="32" Padding="0" Margin="0,0,5,5" BorderThickness="0"
                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Background="{DynamicResource PrimaryHueDarkBrush}"
                                            Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                            <Border>
                                                <Viewbox FlowDirection="{TemplateBinding FlowDirection}">
                                                    <Canvas Width="24" Height="24">
                                                        <Path Data="M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z" Fill="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                                    </Canvas>
                                                </Viewbox>
                                            </Border>
                                        </Button>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                    </StackPanel>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource  Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                        <Setter TargetName="navigateCardBtn" Property="IsEnabled" Value="true"/>
                        <Setter TargetName="middleBoder" Property="BorderBrush" Value="{StaticResource SecondaryAccentBrush}"/>
                        <Setter TargetName="innerBoder" Property="Background" Value="{StaticResource PrimaryHueMidBrush}"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <StackPanel Orientation="Horizontal">
                                <Separator x:Name="leftSeparator" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Visibility="Collapsed"/>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Separator x:Name="rightSeparator" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Visibility="Collapsed"/>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                    <Setter Property="Padding" Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">

                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">

                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">

                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}"/>
                                    <Setter Property="Visibility" TargetName="leftSeparator" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="rightSeparator" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PDAListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4,1"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>-->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="root" Margin="0,5,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding State}" Value="PDA" TrueState="PDAState" FalseState="PDAState"/>
            <ei:DataStateBehavior Binding="{Binding State}" Value="Card" TrueState="CardState" FalseState="PDAState"/>
            <ei:DataStateBehavior Binding="{Binding State}" Value="Cahnnel" TrueState="ChannelState" FalseState="PDAState"/>
        </i:Interaction.Behaviors>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="ChannelState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ChannelGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="PDAState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PDAGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CardState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CardGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid>
            <StackPanel Orientation="Horizontal" Background="{StaticResource PrimaryHueMidBrush}">
                <RadioButton Content="PDA" FontSize="15" FontWeight="Bold" Margin="5,0" VerticalAlignment="Center" Style="{DynamicResource RadioButtonStyle1}"
                             IsChecked="{Binding State,Converter={StaticResource enumBooleanConverter}, ConverterParameter=PDA}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <ei:GoToStateAction StateName="PDAState"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
                <RadioButton Content="板卡" FontSize="15" FontWeight="Bold" Margin="5,0" VerticalAlignment="Center" Style="{StaticResource RadioButtonStyle1}"
                             IsChecked="{Binding State,Converter={StaticResource enumBooleanConverter}, ConverterParameter=Card}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <ei:GoToStateAction StateName="CardState"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
                <RadioButton Content="通道" FontSize="15" FontWeight="Bold" Margin="5,0" VerticalAlignment="Center" Style="{StaticResource RadioButtonStyle1}"
                             IsChecked="{Binding State,Converter={StaticResource enumBooleanConverter}, ConverterParameter=Channel}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <ei:GoToStateAction StateName="ChannelState"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
            </StackPanel>
        </Grid>
        <Grid  Grid.Row="1">
            <Grid x:Name="stateGrid">
                <Grid x:Name="PDAGrid" Margin="0" Grid.Column="2" Visibility="Collapsed">
                    <Grid x:Name="PDAContainer">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Button Content="参数" Width="100">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:CallMethodAction MethodName="NavigateToPDA" TargetObject="{Binding}"/><!--传递PDA参数-->
                                    <ei:ControlStoryboardAction >
                                        <ei:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="spinner">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="spinnerBackground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PDAContainer">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PDAParameter">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <Point3DAnimation To="0,0,1.1" From="0,0,0.5"  BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.5"  Storyboard.TargetName="camera" 
                                                              Storyboard.TargetProperty="(ProjectionCamera.Position)" />
                                                <DoubleAnimation From="0" To="180" AccelerationRatio="0.5" DecelerationRatio="0.5" BeginTime="0:0:0.05" Duration="0:0:1"  Storyboard.TargetName="rotate" Storyboard.TargetProperty="Angle" />
                                            </Storyboard>
                                        </ei:ControlStoryboardAction.Storyboard>
                                    </ei:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    
                        <ListBox Grid.Row="1" ItemsSource="{Binding PDAs}" SelectedItem="{Binding SelectedPDA}" Background="{x:Null}" BorderBrush="{x:Null}"
                                 ItemTemplate="{DynamicResource PDADataTemplate}"  
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemContainerStyle="{DynamicResource PDAListBoxItemStyle}" >
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>                        
                    </Grid>

                    <Grid Grid.Row="1" x:Name="PDAParameter" Visibility="Collapsed">
                        <TextBlock Text="{Binding SelectedPDA.IP}" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <Border BorderBrush="{StaticResource PrimaryHueLightBrush}" BorderThickness="5">
                            <ContentControl prism:RegionManager.RegionName="PDAContentRegion">
                                <!--<ContentControl.ContentTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="PDAParameter" Foreground="Red" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="48"/>
                                    </DataTemplate>
                                </ContentControl.ContentTemplate>-->
                            </ContentControl>
                        </Border>
                        <Button Content="PDA" Width="100" Height="30" Margin="5"  VerticalAlignment="Top">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:ControlStoryboardAction >
                                        <ei:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="spinner">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="spinnerBackground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PDAContainer">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PDAParameter">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <Point3DAnimation To="0,0,1.1" From="0,0,0.5"  BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.5"  Storyboard.TargetName="camera" 
                                                              Storyboard.TargetProperty="(ProjectionCamera.Position)" />
                                                <DoubleAnimation From="0" To="180" AccelerationRatio="0.5" DecelerationRatio="0.5" BeginTime="0:0:0.05" Duration="0:0:1"  Storyboard.TargetName="rotate" Storyboard.TargetProperty="Angle" />
                                            </Storyboard>
                                        </ei:ControlStoryboardAction.Storyboard>
                                    </ei:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>
                </Grid>

                <Grid x:Name="CardGrid" Visibility="Collapsed">
                    <Grid  x:Name="cardList" Background="White">
                        <localControls:DataBoard ItemsSource="{Binding SelectedPDA.Cards}"  SelectedItem="{Binding SelectedCard}"
        						HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
        						Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" BorderBrush="{x:Null}" Background="{x:Null}"
        						ItemTemplateSelector="{StaticResource cardDataTemplateSelector}" 
        						ItemsPanel="{DynamicResource ItemsPanelTemplate1}" 
        						ItemContainerStyle="{DynamicResource CardListBoxItemStyle}"/>

                        <Button Content="CardParameter" Width="100" Height="30" Margin="5" VerticalAlignment="Top">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:CallMethodAction MethodName="NavigateToCard" TargetObject="{Binding}"/>
                                    <ei:ControlStoryboardAction >
                                        <ei:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="spinner">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="spinnerBackground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardList">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardParameter">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <Point3DAnimation To="0,0,1.1" From="0,0,0.5"  BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.5"  Storyboard.TargetName="camera" 
                                                              Storyboard.TargetProperty="(ProjectionCamera.Position)" />
                                                <DoubleAnimation From="0" To="180" AccelerationRatio="0.5" DecelerationRatio="0.5" BeginTime="0:0:0.05" Duration="0:0:1"  Storyboard.TargetName="rotate" Storyboard.TargetProperty="Angle" />
                                            </Storyboard>
                                        </ei:ControlStoryboardAction.Storyboard>
                                    </ei:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <TextBlock Text="{Binding SelectedPDA.IP}" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="{StaticResource PrimaryHueDarkForegroundBrush}"/>
                        
                    </Grid>

                    <Grid x:Name="cardParameter" Visibility="Collapsed" Background="White">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border BorderBrush="Green" Grid.Row="2" BorderThickness="1" Background="Transparent">
                            <ContentControl prism:RegionManager.RegionName="CardContentRegion"/>
                        </Border>

                        <Button Content="CardList" Width="100" Height="30" Margin="5" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:ControlStoryboardAction >
                                        <ei:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="spinner">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="spinnerBackground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.05" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardList">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardParameter">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <Point3DAnimation To="0,0,1.1" From="0,0,0.5"  BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.5"  Storyboard.TargetName="camera" 
                                                              Storyboard.TargetProperty="(ProjectionCamera.Position)" />
                                                <DoubleAnimation From="0" To="180" AccelerationRatio="0.5" DecelerationRatio="0.5" BeginTime="0:0:0.05" Duration="0:0:1"  Storyboard.TargetName="rotate" Storyboard.TargetProperty="Angle" />
                                            </Storyboard>
                                        </ei:ControlStoryboardAction.Storyboard>
                                    </ei:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <TextBlock FontSize="24" HorizontalAlignment="Left" Foreground="{StaticResource PrimaryHueDarkForegroundBrush}">
                            <Run Text="{Binding SelectedCard.CardId.IP,Mode=OneWay}"/>
                            <Run> - </Run>
                            <Run Text="{Binding SelectedCard.CardId.CardNum,Mode=OneWay}"/>
                        </TextBlock>                       
                    </Grid>
                </Grid>
                
                <Grid x:Name="ChannelGrid" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock FontSize="24" Foreground="{StaticResource PrimaryHueDarkForegroundBrush}" VerticalAlignment="Top">
                            <Run Text="{Binding SelectedChannel.ChannelId.IP,Mode=OneWay}"/>
                            <LineBreak/>
                            <Run Text="{Binding SelectedChannel.ChannelId.CardNum,Mode=OneWay}"/>
                            <LineBreak/>
                            <Run Text="{Binding SelectedChannel.ChannelId.ChannelNum,Mode=OneWay}"/>
                    </TextBlock>

                    <Grid Width="117" Height="471" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <!--<i:Interaction.Behaviors>
                    <ei:FluidMoveBehavior x:Name="gridMoveBehavior" Duration="0:0:0.5" InitialTag="DataContext">
                        <ei:FluidMoveBehavior.EaseX>
                            <CircleEase EasingMode="EaseOut"/>
                        </ei:FluidMoveBehavior.EaseX>
                        <ei:FluidMoveBehavior.EaseY>
                            <CircleEase EasingMode="EaseOut"/>
                        </ei:FluidMoveBehavior.EaseY>
                    </ei:FluidMoveBehavior>
                </i:Interaction.Behaviors>-->
                        <!--<Border BorderBrush="Green" BorderThickness="1" Background="Transparent">-->
                            <ContentControl Content="{Binding SelectedCard}" ContentTemplateSelector="{StaticResource cardEditingDataTemplateSelector}"  />
                        <!--</Border>-->
                    </Grid>                   
                    <ContentControl prism:RegionManager.RegionName="ChannelContentRegion" Grid.Column="1"/>
                </Grid>
            </Grid>

            <Rectangle x:Name="spinnerBackground" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Gray" />

            <Viewport3D x:Name="spinner" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Viewport3D.Camera>
                    <PerspectiveCamera x:Name="camera" Position="0,0,0.5" LookDirection="0,0,-1" FieldOfView="90" />
                </Viewport3D.Camera>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <Model3DGroup>
                            <DirectionalLight Color="#444" Direction="0,0,-1" />
                            <AmbientLight Color="#BBB" />
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <GeometryModel3D>
                            <GeometryModel3D.Geometry>
                                <MeshGeometry3D  TriangleIndices="0,1,2 2,3,0" TextureCoordinates="0,1 1,1 1,0 0,0" Positions="-0.5,-0.5,0 0.5,-0.5,0 0.5,0.5,0 -0.5,0.5,0" />
                            </GeometryModel3D.Geometry>
                            <GeometryModel3D.Material>
                                <DiffuseMaterial>
                                    <DiffuseMaterial.Brush>
                                        <VisualBrush Visual="{Binding ElementName=stateGrid}" Stretch="Uniform" />
                                    </DiffuseMaterial.Brush>
                                </DiffuseMaterial>
                            </GeometryModel3D.Material>
                            <GeometryModel3D.BackMaterial>
                                <DiffuseMaterial>
                                    <DiffuseMaterial.Brush>
                                        <VisualBrush Visual="{Binding ElementName=stateGrid}" Stretch="Uniform">
                                            <VisualBrush.RelativeTransform>
                                                <ScaleTransform ScaleX="-1" CenterX="0.5" />
                                            </VisualBrush.RelativeTransform>
                                        </VisualBrush>
                                    </DiffuseMaterial.Brush>
                                </DiffuseMaterial>
                            </GeometryModel3D.BackMaterial>
                            <GeometryModel3D.Transform>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>
                                        <AxisAngleRotation3D x:Name="rotate" Axis="0,3,0" Angle="0" />
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>
                            </GeometryModel3D.Transform>
                        </GeometryModel3D>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
            </Viewport3D>
        </Grid>
    </Grid>
</UserControl>