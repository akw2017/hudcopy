<UserControl x:Class="AIC.CYSHPage.Views.MainRegionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AIC.CYSHPage.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:menu="clr-namespace:AIC.Core.ControlModels;assembly=AIC.Core"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
             xmlns:model="clr-namespace:AIC.CYSHPage.Models"
             Style="{DynamicResource AsyncWorkUserControlStyle}"
             mc:Ignorable="d" 
             x:Name="usercontrol"
             d:DesignHeight="300" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <core:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <Style TargetType="{x:Type Controls:WindowButtonCommands}">
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="Height"
                        Value="24" />
            </Style>
            <Ellipse x:Key="AppThemeMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     StrokeThickness="1"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Ellipse x:Key="AccentMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Style x:Key="AppThemeMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon"
                        Value="{StaticResource AppThemeMenuIcon}" />
                <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
            </Style>
            <Style x:Key="AccentColorMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon"
                        Value="{StaticResource AccentMenuIcon}" />
                <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
            </Style>
            <Style TargetType="TabItem">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <DockPanel>
                                <Image Stretch="None" Source="/AIC.Resources;component/Images/application.png" DockPanel.Dock="Left" Margin="0,0,6,0"/>
                                <Grid DockPanel.Dock="Right" Margin="6,0,0,0">
                                    <Button Command="{Binding Path=CloseCommand}" Cursor="Hand" FontWeight="Bold" Width="24" Height="24" Visibility="{Binding Path=Visibility}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="X" Foreground="{DynamicResource AccentColorBrush}" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>
                                    <Button Cursor="Hand" Width="24" Height="24" 
                                            Visibility="{Binding Path=LockVisibility}" 
                                            Command="{Binding DataContext.UnLockCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}"
                                            >
                                        <Image Source="/AIC.Resources;component/Images/lock.png" Margin="-1,-1,-1,-1" Stretch="Fill"/>
                                    </Button>
                                </Grid>
                                <ContentPresenter Content="{Binding Path=Title}" VerticalAlignment="Center" />
                            </DockPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Header" Value="{Binding Path=Content.Closer,RelativeSource={x:Static RelativeSource.Self}}"></Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Image Grid.ColumnSpan="2" Grid.RowSpan="2" Source="/AIC.CYSHPage;component/Images/CYSH.jpg"></Image>
        <TextBlock Grid.Row="2"  Grid.Column="1" Text="{Binding LoginUser}" VerticalAlignment="Center" HorizontalAlignment="Right"/>

        <Expander x:Name="expanderMenu" Grid.Row="3" ExpandDirection="Left" Style="{DynamicResource ExpanderStyle1}" >
            <Expander.Content>
                <TreeView Name="treeview" Grid.RowSpan="4" ItemsSource="{Binding CatalogTreeItems}" Style="{DynamicResource VirtualisedMetroTreeView}" MinWidth="200">
                    <TreeView.ItemTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type model:PropertyNodeItem}" ItemsSource="{Binding Path=Children}">

                            <StackPanel Orientation="Horizontal">                               
                                <TextBlock VerticalAlignment="Center" Text="{Binding Name, Mode=TwoWay}"/>
                                <StackPanel.ToolTip>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Name}" TextWrapping="Wrap" MaxWidth="200"/>
                                </StackPanel.ToolTip>
                            </StackPanel>

                        </HierarchicalDataTemplate>

                    </TreeView.ItemTemplate>
                    
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource LineTreeViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding SelectTreeChangeComamnd}" CommandParameter="{Binding SelectedItem, ElementName=treeview}"/>
                        </i:EventTrigger>

                    </i:Interaction.Triggers>

                </TreeView>
            </Expander.Content>
        </Expander>
        <ContentControl prism:RegionManager.RegionName="MainTabRegion" Grid.Row="3" Grid.Column="1" />
        <Grid Grid.Row="4" Background="{DynamicResource AccentColorBrush}" Grid.ColumnSpan="2">
            <StatusBar>
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBar Grid.Column="0" Background="{x:Null}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Path Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter}}" Data="F1 M 25.3333,23.7501L 28.4999,23.7501L 28.5,33.25L 25.3333,33.2501L 25.3333,23.7501 Z M 30.0833,25.3335L 33.2499,25.3335L 33.25,39.5834L 30.0833,39.5834L 28.5,41.1667L 28.5,50.6667L 25.3333,50.6667L 25.3333,41.1667L 23.75,39.5834L 20.5833,39.5835L 20.5832,25.3335L 23.7499,25.3335L 23.7499,34.8334L 24.5416,34.8334L 29.2916,34.8334L 30.0833,34.8334L 30.0833,25.3335 Z M 30.0833,47.5L 30.0833,44.3334L 50.6667,44.3334L 50.6667,30.0833L 34.8333,30.0834L 34.8333,26.9167L 55.4166,26.9167L 55.4166,47.5L 41.1666,47.5L 41.1667,50.6667L 45.125,50.6667L 45.9166,53.8333L 33.25,53.8333L 34.0417,50.6667L 38,50.6667L 38,47.5L 30.0833,47.5 Z " Stretch="Fill" Fill="Green" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock Text=" 在线" Foreground="Green" VerticalAlignment="Center" Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter}}"/>
                        <Path Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter},ConverterParameter=invert}" Data="F1 M 48.0542,39.5833L 53.0417,44.5708L 58.0291,39.5834L 60.1666,41.7209L 55.1792,46.7083L 60.1667,51.6958L 58.0292,53.8333L 53.0417,48.8458L 48.0542,53.8333L 45.9167,51.6958L 50.9042,46.7083L 45.9167,41.7208L 48.0542,39.5833 Z M 23.7499,23.7501L 26.9166,23.7501L 26.9166,33.25L 23.75,33.2501L 23.7499,23.7501 Z M 28.4999,25.3335L 31.6666,25.3335L 31.6666,39.5835L 28.5,39.5834L 26.9166,41.1667L 26.9166,50.6667L 23.7499,50.6667L 23.75,41.1667L 22.1666,39.5834L 18.9999,39.5835L 18.9999,25.3335L 22.1666,25.3335L 22.1666,34.8334L 22.9583,34.8335L 27.7083,34.8334L 28.5,34.8334L 28.4999,25.3335 Z M 28.5,47.5001L 28.5,44.3334L 45.6792,44.3334L 48.0541,46.7083L 47.2624,47.5001L 39.5833,47.5L 39.5833,50.6667L 43.5416,50.6667L 44.3333,53.8334L 31.6667,53.8334L 32.4583,50.6667L 36.4166,50.6667L 36.4166,47.5L 28.5,47.5001 Z M 49.0833,30.0834L 33.25,30.0834L 33.25,26.9167L 53.8333,26.9167L 53.8332,40.9293L 53.0416,41.7209L 49.0833,37.7625L 49.0833,30.0834 Z " Stretch="Fill" Fill="Red" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock Text=" 离线" Foreground="Red" VerticalAlignment="Center" Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter},ConverterParameter=invert}"/>
                    </StackPanel>
                    <TextBlock Foreground="White" >
                        <Run>测点总数:</Run>
                        <Run Text="{Binding Count}"/>
                    </TextBlock >
                    <TextBlock Foreground="#FF87CDEE" >
                        <Run>正常:</Run>
                        <Run Text="{Binding NormalCount}" />
                    </TextBlock>
                    <TextBlock Foreground="Yellow">
                        <Run>预警:</Run>
                        <Run Text="{Binding PreWarningCount}" />
                    </TextBlock>
                    <TextBlock Foreground="DarkOrange">
                        <Run>警告:</Run>
                        <Run Text="{Binding WarningCount}" />
                    </TextBlock>
                    <TextBlock Foreground="Red">
                        <Run>危险:</Run>
                        <Run Text="{Binding DangerCount}" />
                    </TextBlock>
                    <TextBlock Foreground="Pink">
                        <Run>无效:</Run>
                        <Run Text="{Binding AbnormalCount}" />
                    </TextBlock>
                    <TextBlock Foreground="DarkRed">
                        <Run>断线:</Run>
                        <Run Text="{Binding UnConnectCount}" />
                    </TextBlock>
                    <ToggleButton x:Name="mutebtn" IsChecked="{Binding Mute}" Template="{StaticResource SoundToggleButton}"/>
                </StatusBar>
                <Separator  Grid.Column="1" Style="{StaticResource MetroStatusBarSeparator}" />
                <!--<StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="12" Height="12" Fill="Red"/>
                    <TextBlock VerticalAlignment="Center"> <Hyperlink Command="{Binding ChangeOilCommmad}">点名：高危</Hyperlink></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="12" Height="12" Fill="Red"/>
                    <TextBlock VerticalAlignment="Center"> <Hyperlink Command="{Binding ChangeOilCommmad}">点名：高危</Hyperlink></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="12" Height="12" Fill="Red"/>
                    <TextBlock VerticalAlignment="Center"> <Hyperlink Command="{Binding ChangeOilCommmad}">点名：高危</Hyperlink></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="12" Height="12" Fill="Orange"/>
                    <TextBlock  VerticalAlignment="Center"> <Hyperlink Command="{Binding ChangeOilCommmad}">点名：高报</Hyperlink></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="12" Height="12" Fill="Orange"/>
                    <TextBlock  VerticalAlignment="Center"> <Hyperlink Command="{Binding ChangeOilCommmad}">点名：高报</Hyperlink></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />-->
                <StatusBarItem Grid.Column="3" Visibility="Collapsed">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="ellipse" Width="12" Height="12" Fill="Red">
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Window.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" >
                                            <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <TextBlock  VerticalAlignment="Center"> <Hyperlink Command="{Binding AlarmListCommmad}"> <TextBlock Text="报警列表"/> </Hyperlink></TextBlock>
                    </StackPanel>
                </StatusBarItem>

                <StatusBarItem Grid.Column="4" Visibility="{Binding ExceptListVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="ellipse2" Width="12" Height="12" Fill="Yellow">
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Window.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" >
                                            <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <TextBlock  VerticalAlignment="Center"> <Hyperlink Command="{Binding ExceptListCommmad}"> <TextBlock Text="异常列表"/> </Hyperlink></TextBlock>
                    </StackPanel>
                </StatusBarItem>

                <StatusBarItem  Grid.Column="5" Content="{Binding NowTime}" HorizontalAlignment="Right" />
            </StatusBar>
        </Grid>
    </Grid>
</UserControl>
