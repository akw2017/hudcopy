<!--
// ****************************************************************************
// <author>mishkin Ivan</author>
// <email>Mishkin_Ivan@mail.ru</email>
// <date>28.01.2015</date>
// <project>ItemsFilter</project>
// <license> GNU General Public License version 3 (GPLv3) </license>
// ****************************************************************************
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"                  
                    xmlns:bsFilter="clr-namespace:BolapanControl.ItemsFilter"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:vw="clr-namespace:BolapanControl.ItemsFilter.View"
                    mc:Ignorable="d">
    <!--  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />  -->
    <vw:FilterControlVmToVisibilityConverter x:Key="FilterControlVmToVisibilityConverter" />
    <vw:SimplePropertyConverter x:Key="SimplePropertyConverter" />
    <!--  Control colors.  -->
    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <!--    -->
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <!--    -->
    <Color x:Key="EnabledColorLightColor">#FFF8FAFD</Color>
    <Color x:Key="EnabledControlDarkColor">#FF4C607A</Color>
    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>


    <SolidColorBrush x:Key="ForegroundBrush" Color="{DynamicResource BlackColor}"/>
    <SolidColorBrush x:Key="FilterBackground" Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="FilterPressedPenColor" Color="#FF3B329C" />
    <SolidColorBrush x:Key="FilterPenColor" Color="#FF85CBEB" />

    <DrawingImage x:Key="DownArrowImage">
        <DrawingImage.Drawing>
            <GeometryDrawing>
                <GeometryDrawing.Brush>
                    <SolidColorBrush Color="{StaticResource EnabledControlDarkColor}" />
                </GeometryDrawing.Brush>
                <GeometryDrawing.Geometry>
                    <Geometry>M 0,0 L 3.5,4 L 7,0 Z</Geometry>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="DownArrowDisableImage">
        <DrawingImage.Drawing>
            <GeometryDrawing>
                <GeometryDrawing.Brush>
                    <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                </GeometryDrawing.Brush>
                <GeometryDrawing.Geometry>
                    <Geometry>M 0,0 L 3.5,4 L 7,0 Z</Geometry>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>
    <GeometryDrawing x:Key="DownArrowDrawing">
        <GeometryDrawing.Brush>
            <SolidColorBrush Color="{StaticResource EnabledControlDarkColor}" />
        </GeometryDrawing.Brush>
        <GeometryDrawing.Geometry>
            <Geometry>M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        </GeometryDrawing.Geometry>
    </GeometryDrawing>
    <DrawingImage x:Key="FilterActiveImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource FilterPenColor}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="#FF7070DC"
                             EndLineCap="Square"
                             LineJoin="Bevel"
                             StartLineCap="Square"
                             Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Brush="{StaticResource FilterPenColor}" Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="FilterOpenPressedImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPressedPenColor}"
                             EndLineCap="Square"
                             LineJoin="Bevel"
                             StartLineCap="Square"
                             Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPressedPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPressedPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="FilterOpenImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource FilterPenColor}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
                             EndLineCap="Square"
                             LineJoin="Bevel"
                             StartLineCap="Square"
                             Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="ClearImage">
        <DrawingImage.Drawing>

            <GeometryDrawing Brush="{StaticResource ForegroundBrush}" Geometry="M 1,2C 3.33333,3.33333 5.66667,4.66667 7.66667,6.66667C 9.66667,8.66666 11.3333,11.3333 12.1667,12.6667L 13,14M 1,15C 3,12 5,9 7.33333,6.66667C 9.66667,4.33333 12.3333,2.66667 13.6667,1.83333L 15,1" />
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingBrush x:Key="FilterButtonDisable" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M 0,0 L 3.5,4 L 7,0 Z">
                    <GeometryDrawing.Brush>
                        <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
        <!--    -->
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonEnable" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M 0,0 L 3.5,4 L 7,0 Z">
                    <GeometryDrawing.Brush>
                        <SolidColorBrush Color="#FF85CBEB"/>
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonActive" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource FilterPenColor}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="#FF85CBEB"
								EndLineCap="Square"
								LineJoin="Bevel"
								StartLineCap="Square"
								Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Brush="{StaticResource FilterPenColor}" Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonOpenPressed" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPressedPenColor}"
                             EndLineCap="Square"
                             LineJoin="Bevel"
                             StartLineCap="Square"
                             Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPressedPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPressedPenColor}"
                             EndLineCap="Round"
                             LineJoin="Round"
                             StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="FilterButtonOpen" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource FilterPenColor}" Geometry="F1 M 6,15L 6,11">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
								EndLineCap="Square"
								LineJoin="Bevel"
								StartLineCap="Square"
								Thickness="2" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,7L 6,11L 10,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="F1 M 2,5L 6,9L 10,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource FilterPenColor}"
								EndLineCap="Round"
								LineJoin="Round"
								StartLineCap="Round" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="Clear" Stretch="None">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource ForegroundBrush}" Geometry="M 1,2C 3.33333,3.33333 5.66667,4.66667 7.66667,6.66667C 9.66667,8.66666 11.3333,11.3333 12.1667,12.6667L 13,14M 1,15C 3,12 5,9 7.33333,6.66667C 9.66667,4.33333 12.3333,2.66667 13.6667,1.83333L 15,1" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!--  <SolidColorBrush x:Key="FilterItemBackground" Color="#FFEAEAF5" />  -->

    <!--  border style  -->
    <Style x:Key="borderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Background" Value="{StaticResource FilterBackground}" />
    </Style>

    <!--  Text block style for displaying the filter type  -->
    <Style x:Key="FilterNameStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Text" Value="Filter" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <!--  <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />  -->

    <Style x:Key="ColumnHeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!--<Border Background="Transparent" BorderBrush="#FF85CBEB" BorderThickness="2" CornerRadius="3" Width="Auto" Height="Auto"/>-->
                        <ContentPresenter Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}" />
    </Style>

    <Style x:Key="FilterClearButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="#00000000"
                            BorderThickness="1,0,0,1"
                            Padding="2">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Path x:Name="path"
                              Data="M 1,2C 3.33333,3.33333 5.66667,4.66667 7.66667,6.66667C 9.66667,8.66666 11.3333,11.3333 12.1667,12.6667L 13,14M 1,15C 3,12 5,9 7.33333,6.66667C 9.66667,4.33333 12.3333,2.66667 13.6667,1.83333L 15,1"
                              Fill="{DynamicResource FilterPressedPenColor}"
                              StrokeEndLineCap="Round"
                              StrokeStartLineCap="Round" />

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <!--  Command="bsFilter:FilterCommand.Clear"  -->
        <Setter Property="Command" Value="{x:Static bsFilter:FilterCommand.Clear}" />
        <!--  ToolTip="Clear filter"  -->
        <Setter Property="ToolTip" Value="Clear filter" />
    </Style>
    <!--  String Value Filter  -->
    <Style TargetType="{x:Type vw:StringFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:StringFilterView}">
                    <Border Height="Auto"
							Margin="{TemplateBinding Margin}"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="{TemplateBinding VerticalAlignment}"
							Style="{StaticResource borderStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PART_Name"
									Grid.Column="0"
									Style="{StaticResource FilterNameStyle}" />

                            <TextBlock Grid.Row="1"
									Margin="1"
									HorizontalAlignment="Right"
									Foreground="{StaticResource ForegroundBrush}"
									Text="Search Type:"
									TextWrapping="NoWrap" />

                            <TextBlock Grid.Row="2"
									Margin="1"
									HorizontalAlignment="Right"
									Foreground="{StaticResource ForegroundBrush}"
									Text="Find:"
									TextWrapping="Wrap" />

                            <TextBox x:Name="PART_Input"
									Grid.Row="2"
									Grid.Column="1"
									Grid.ColumnSpan="2"
									Margin="1"
									Padding="1,1,1,1"
									Background="Transparent"
									BorderBrush="{StaticResource ForegroundBrush}"
									Foreground="{StaticResource ForegroundBrush}"
									Text="{Binding Model.Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
									TextWrapping="NoWrap" />

                            <ComboBox x:Name="PART_FilterType"
									Grid.Row="1"
									Grid.Column="1"
									Grid.ColumnSpan="2"
									Margin="2"
									HorizontalAlignment="Stretch"
									Padding="1,1,1,1"
									SelectedValue="{Binding Model.Mode, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Button Grid.Column="2" Style="{StaticResource FilterClearButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Filters View  -->
    <Style TargetType="{x:Type vw:RangeFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:RangeFilterView}">
                    <Border Height="Auto"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Style="{StaticResource borderStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PART_Name"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Style="{StaticResource FilterNameStyle}" />

                            <TextBlock Grid.Row="1"
                                       Margin="1,1,1,1"
                                       HorizontalAlignment="Left"
                                       Padding="1,1,1,1"
                                       Text="From:"
                                       TextAlignment="Left"
                                       TextWrapping="NoWrap" />

                            <TextBox x:Name="PART_From"
                                     Grid.Row="1"
                                     Grid.Column="1"
                                     Grid.ColumnSpan="2"
                                     Margin="1,1,1,1"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     Padding="1,1,1,1"
                                     Text="{Binding Model.CompareFrom,
                                                    Converter={StaticResource SimplePropertyConverter},
                                                    UpdateSourceTrigger=Explicit,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                     TextWrapping="NoWrap" />

                            <TextBlock Grid.Row="2"
                                       Grid.Column="0"
                                       Margin="1,1,1,1"
                                       Padding="1,1,1,1"
                                       Text="To :"
                                       TextWrapping="Wrap" />

                            <TextBox x:Name="PART_To"
                                     Grid.Row="2"
                                     Grid.Column="1"
                                     Grid.ColumnSpan="2"
                                     Margin="1,1,1,1"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     Padding="1,1,1,1"
                                     Text="{Binding Model.CompareTo,
                                                    Converter={StaticResource SimplePropertyConverter},
                                                    UpdateSourceTrigger=Explicit,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                     TextWrapping="NoWrap" />
                            <Button Grid.Column="2" Style="{StaticResource FilterClearButtonStyle}" />

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Compare Value Filter  -->
    <Style TargetType="{x:Type vw:ComparableFilterView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vw:ComparableFilterView}">
                    <Border Height="Auto"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Style="{StaticResource borderStyle}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PART_Name"
                                       Grid.Column="0"
                                       Style="{StaticResource FilterNameStyle}"
                                       Text="{Binding Model.Name,
                                                      Mode=OneWay,
                                                      RelativeSource={RelativeSource TemplatedParent}}" />

                            <TextBox x:Name="PART_Input"
                                     Grid.Row="1"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="2"
                                     Margin="2"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     Padding="1,1,1,1"
                                     Text="{Binding Model.CompareTo,
                                                    UpdateSourceTrigger=Explicit,
                                                    Converter={StaticResource SimplePropertyConverter},
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                     TextWrapping="NoWrap" />
                            <Button Grid.Column="1" Style="{StaticResource FilterClearButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="baseCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{x:Null}"/>

    <Style x:Key="MultivalueFilterItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox x:Name="Bd"
                              Background="{x:Null}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              Foreground="{StaticResource ForegroundBrush}"
                              Style="{StaticResource baseCheckBox}"
                              IsChecked="{Binding IsSelected,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          ContentStringFormat="G"
                                          RecognizesAccessKey="True"  
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </CheckBox>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="MultiValueFilterViewTemplate" TargetType="{x:Type vw:MultiValueFilterView}">
        <Border MaxHeight="150"
                Margin="{TemplateBinding Margin}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Style="{StaticResource borderStyle}"
                d:DesignHeight="150"
                d:DesignWidth="250">
            <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ListBox x:Name="PART_Items"
                         Grid.Row="1"
                         Grid.ColumnSpan="2"
                         Width="Auto"
                         Height="Auto"
                         BorderBrush="{x:Null}" 
                         Background="{StaticResource FilterBackground}"
                         ItemContainerStyle="{StaticResource MultivalueFilterItemStyle}"
                         ItemsSource="{Binding Model.AvailableValues, RelativeSource={RelativeSource TemplatedParent}}"
                         SelectedValuePath="{x:Null}"
                         SelectionMode="Multiple"
                         SnapsToDevicePixels="False"
                         VirtualizingStackPanel.VirtualizationMode="Recycling"/>

                <TextBlock x:Name="PART_Name"
                           Grid.Row="0"
                           Grid.Column="0"
                           Style="{StaticResource FilterNameStyle}"
                           Text="{Binding Model.Name, RelativeSource={RelativeSource TemplatedParent}}" />
                <Button Grid.Column="1" Style="{StaticResource FilterClearButtonStyle}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!--  Multi Value Filter  -->
    <Style TargetType="{x:Type vw:MultiValueFilterView}">
        <Setter Property="Template" Value="{StaticResource MultiValueFilterViewTemplate}" />
    </Style>

    <!--  Enum Value Filter  -->
    <Style TargetType="{x:Type vw:EnumFilterView}">
        <Setter Property="Template" Value="{StaticResource MultiValueFilterViewTemplate}" />
    </Style>

    <ControlTemplate x:Key="FilterControlTemplate" TargetType="{x:Type bsFilter:FilterControl}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="True"
                d:DesignHeight="89">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type bsFilter:FilterControl}">
        <Setter Property="Template" Value="{StaticResource FilterControlTemplate}" />
    </Style>
    <Style TargetType="{x:Type bsFilter:ColumnFilter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bsFilter:ColumnFilter}">
                    <Grid Width="Auto"
							Height="{TemplateBinding Height}"
							Margin="{TemplateBinding Margin}"
							Visibility="{TemplateBinding Model, Converter={StaticResource FilterControlVmToVisibilityConverter}}">
                        <!--<d:DesignHeight>
                                <System:Double>106</System:Double>
                            </d:DesignHeight>
                            <d:DesignWidth>
                                <System:Double>107</System:Double>
                            </d:DesignWidth>-->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FilterState">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonOpen}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disable" />
                                <VisualState x:Name="Enable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonEnable}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OpenActive">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FilterButtonActive}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Button x:Name="button"
								Command="bsFilter:FilterCommand.Show"
								Padding="2"
                                Width="20" Height="20"
								Style="{StaticResource ColumnHeaderButtonStyle}">
                            <Rectangle x:Name="Icon" Fill="{StaticResource FilterButtonEnable}" Width="20" Height="20"/>
                        </Button>
                        <Popup x:Name="PART_FilterView"
								Grid.Row="1"
                                AllowsTransparency="True"
								Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}}"
								MinWidth="180"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								IsOpen="{Binding Model.IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
								Placement="Bottom"
								PopupAnimation="Scroll"
								StaysOpen="False">
                            <Border Background="#FF243859">
                                <Grid>
                                    <ItemsPresenter Grid.Row="1"
											Margin="{TemplateBinding Padding}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth"  Value="0" />
        <Setter Property="MinHeight"  Value="25" />
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding"  Value="10,5" />
        <Setter Property="Margin"  Value="0,0,0,0" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								Grid.ColumnSpan="2"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"/>

                        <ContentPresenter x:Name="HeaderContent"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <!--<Path x:Name="SortArrow"
								Visibility="Collapsed"
								Stretch="Fill"
								Grid.Column="1"
								Width="8"
								Height="10"
								Margin="0,0,8,2"
								VerticalAlignment="Center"
								RenderTransformOrigin="0.5,0.5"
								Fill="#FF85CBEB" />-->
                        <bsFilter:ColumnFilter Grid.Row="0"
                                                   Grid.Column="1"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Center"
                                                   Background="Transparent"
                                                   BorderThickness="0" BorderBrush="Transparent"
                                                   ParentCollection="{Binding ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" 
                                                   Style="{DynamicResource ColumnFilterStyle1}" />

                        <Thumb x:Name="PART_LeftHeaderGripper"
								HorizontalAlignment="Left"
								HorizontalContentAlignment="Left"
								Background="Transparent"
								Style="{StaticResource ColumnHeaderGripperStyle}" />

                        <Thumb x:Name="PART_RightHeaderGripper"
								HorizontalAlignment="Right"
								HorizontalContentAlignment="Right"
								Style="{StaticResource ColumnHeaderGripperStyle}"
								Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="#7F486391" />
                        </Trigger>
                        <!--<Trigger Property="SortDirection"  Value="Ascending">
								<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
								<Setter TargetName="SortArrow" Property="Data"
									Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
							</Trigger>
							<Trigger Property="SortDirection" Value="Descending">
								<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
								<Setter TargetName="SortArrow"  Property="Data"
									Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
								<Setter TargetName="SortArrow" Property="Margin" Value="0,0,8,0" />
							</Trigger>-->
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper" />
                        </Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsConnected}" Value="false">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
								Content="{TemplateBinding Content}"
								ContentStringFormat="{TemplateBinding ContentStringFormat}"
								Margin="{TemplateBinding Padding}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"/>
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                               Value="Cell" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="gray" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                               Value="False" />
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                               Value="CellOrRowHeader" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="gray" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                               Value="Cell" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="gray" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                               Value="False" />
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                               Value="CellOrRowHeader" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="gray" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="gray" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled"
                               Value="False" />
                    <Condition Property="IsSelected"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="gray" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <!--<Setter Property="MinWidth" Value="25"/>-->
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Background" Value="{StaticResource FilterBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                        <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                      
                            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            
                        <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
                        <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridSelectAllButtonStyle2" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{StaticResource FilterBackground}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type bsFilter:FilterDataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Button Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{StaticResource DataGridSelectAllButtonStyle2}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                     Path=HeadersVisibility,
                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                        <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                                             Path=HeadersVisibility,
                                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding Path=VerticalOffset,
                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                   Mode=OneWay}" />

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding Path=HorizontalOffset,
                                                                       RelativeSource={RelativeSource TemplatedParent},
                                                                       Mode=OneWay}" />

                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
