<core:DisposableUserControl x:Class="AIC.DiagnosePage.Views.EditDeviceTemplateView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:control="clr-namespace:AIC.Core.OrganizationModels;assembly=AIC.Core"  
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:timeTool= "clr-namespace:Loya.Dameer;assembly=Loya.Dameer"
             prism:ViewModelLocator.AutoWireViewModel="True"      
             xmlns:command="clr-namespace:AIC.Core.ExCommand;assembly=AIC.Core"    
             xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
             xmlns:coreType="clr-namespace:AIC.CoreType;assembly=AIC.CoreType"
             xmlns:model="clr-namespace:AIC.Core.DiagnosticBaseModels;assembly=AIC.Core"
             xmlns:view="clr-namespace:AIC.DiagnosePage.Views"
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             Style="{DynamicResource AsyncWorkUserControlStyle}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="1200">
    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AIC.Resources;component/Themes/ScrollBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <core:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <core:EqualBindingConverter x:Key="equalBindingConverter"/>
            <core:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
            <core:EnumToVisibilityConverter x:Key="enumToVisibilityConverter" Reverse="False"/>
            <ObjectDataProvider x:Key="motorTypeEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coreType:MotorType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </Control.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0"  Padding="2" Background="{DynamicResource AccentColorBrush2}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{DynamicResource serverIP}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                <ComboBox Width="200" ItemsSource="{Binding ServerIPCategory}" SelectedItem="{Binding ServerIP}" Style="{DynamicResource VirtualisedMetroComboBox}" VerticalAlignment="Center" IsEditable="False" Margin="4,0,0,0"/>
                <Button Command="{Binding LoadCommand}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Height="18" Width="18" Source="/AIC.Resources;component/Images/button-load.png"  />
                            <TextBlock Text="{DynamicResource load}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Rectangle VerticalAlignment="Stretch" Width="2"  Stroke="{DynamicResource AccentColorBrush}" Margin="5,0"/>
                <TextBlock Text="{DynamicResource name}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                <TextBox Text="{Binding SearchName, Mode=OneWayToSource}" Margin="4,0,0,0" Style="{DynamicResource MetroTextBox}" Width="200" VerticalAlignment="Center"/>
                <Button  Command="{Binding QueryCommand}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/search.png"  />
                            <TextBlock Text="{DynamicResource search}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Rectangle VerticalAlignment="Stretch" Width="2"  Stroke="{DynamicResource AccentColorBrush}" Margin="5,0"/>
                <TextBlock Text="{DynamicResource templateManage}" VerticalAlignment="Center" Margin="4,0,0,0"/>
                <TextBox Text="{Binding SelectedName}" Margin="4,0,0,0" Style="{DynamicResource MetroTextBox}" Width="200" VerticalAlignment="Center" IsReadOnly="True"/>
                <Button Command="{Binding AddCommand}"  Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/add.png"  />
                            <TextBlock Text="{DynamicResource add}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Command="{Binding EditCommand}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/pencil.png"  />
                            <TextBlock Text="{DynamicResource edit}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Command="{Binding DeleteCommand}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/delete3.png"  />
                            <TextBlock Text="{DynamicResource delete}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <!--<Button Command="{Binding UploadCommand}"  Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Height="20" Width="20" Source="/AIC.Resources;component/Images/save_upload.png"  />
                            <TextBlock Text="{DynamicResource upload}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>-->
                <Path Width="20" Height="20" Stretch="Fill" Fill="Red" ToolTip="数据同步失败，请重新载入数据！" Margin="4,0,0,0" Data="F1 M 38,22.1667C 41.1666,22.1667 57,52.25 55.4166,53.8333C 53.8333,55.4167 22.1667,55.4167 20.5833,53.8333C 19,52.25 34.8333,22.1667 38,22.1667 Z M 38,45.9167C 36.6883,45.9167 35.625,46.98 35.625,48.2917C 35.625,49.6034 36.6883,50.6667 38,50.6667C 39.3116,50.6667 40.375,49.6034 40.375,48.2917C 40.375,46.98 39.3116,45.9167 38,45.9167 Z M 35.625,31.6667L 36.4166,44.3333L 39.5833,44.3333L 40.375,31.6667L 35.625,31.6667 Z " Visibility="{Binding UploadError, Converter={StaticResource boolToVisibilityConverter}}"/>
            </StackPanel>
        </Border>
        <Grid Grid.Row="1" Background="{DynamicResource AccentColorBrush}">
            <TabControl>
                <TabItem Header="设备模板" Style="{StaticResource TabItemStyle}" IsSelected="{Binding DevicesIsSelected}">
                    <DataGrid x:Name="gridDevices" GridLinesVisibility="None" 
                                 ItemsSource="{Binding DevicesView}" SelectedItem="{Binding SelectedDevice}" SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="设备名称" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="诊断方式" Binding="{Binding DiagnosisMethod,Converter={StaticResource enumDescriptionConverter}}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="峭度指标" Binding="{Binding KurtosisIndexThreshold}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="脉冲指标" Binding="{Binding PulseIndexThreshold}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="峰值指标" Binding="{Binding PeakIndexThreshold}" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn Header="故障概率" Binding="{Binding IsFaultprobability}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="总分频门槛值" Binding="{Binding HeadDivFreThreshold}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="频谱峰值筛选间隔(△f)" Binding="{Binding FrePeakFilterInterval}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="频率诊断设置间隔(△f)" Binding="{Binding FreDiagnosisSetupInterval}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <Border BorderBrush="{DynamicResource AccentColorBrush2}" BorderThickness="2" CornerRadius="2" Margin="2">
                                    <ListBox x:Name="mylist" ItemsSource="{Binding Shafts}" HorizontalContentAlignment="Stretch" AllowDrop="True">
                                        <!--ItemContainerStyle="{StaticResource UnSelectedAndMouseOverListBoxItem}"-->
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border x:Name="border" BorderThickness="0" BorderBrush="{DynamicResource AccentColorBrush}" CornerRadius="2" Margin="0">
                                                    <Grid>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Width="24" Height="24" Source="/AIC.Resources;component/Images/shaft.png"/>
                                                            <TextBlock x:Name="title" HorizontalAlignment="Center">
                                                            <Run Text="{Binding Name}"/>
                                                            <Run>(</Run>
                                                            <Run Text="{Binding Component.Name}"/>
                                                            <Run>)</Run>
                                                            </TextBlock>

                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding DataContext.EditShaftCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}" CommandParameter="{Binding}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ListBox>
                                </Border>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="0,0,5,0"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                                <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                            </Style>
                        </DataGrid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=gridDevices}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </TabItem>
                <TabItem Header="轴模板" Style="{StaticResource TabItemStyle}" IsSelected="{Binding ShaftsIsSelected}">
                    <DataGrid x:Name="gridShafts" GridLinesVisibility="None" 
                                 ItemsSource="{Binding ShaftsView}" SelectedItem="{Binding SelectedShaft}"  SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="轴名称" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn Header="是否为滑动轴承" Binding="{Binding IsSlidingBearing}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="默认转速" Binding="{Binding DefaultRPM}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="转速差" Binding="{Binding DeltaRPM}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="转速系数" Binding="{Binding RPMCoeff}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="否定分频诊断策略" Binding="{Binding NegationDivFreStrategies}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="特征频率" Binding="{Binding NaturalFres}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="分频门槛与加权" Binding="{Binding DivFreThresholdProportiones}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="滤波器" Binding="{Binding FilterType,Converter={StaticResource enumDescriptionConverter}}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <Border BorderBrush="{DynamicResource AccentColorBrush2}" BorderThickness="2" CornerRadius="2" Margin="2">
                                    <ListBox ItemsSource="{Binding MachComponents}" AllowDrop="True" HorizontalContentAlignment="Stretch">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.Resources>
                                            <DataTemplate DataType="{x:Type model:BearingComponent}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Width="24" Height="24" Source="/AIC.Resources;component/Images/Bearing.png"/>
                                                    <TextBlock Margin="5,0" VerticalAlignment="Center">
                                                         <Run Text="{Binding Name}"/>
                                                                <Run>(</Run>
                                                                <Run Text="{Binding Component.Name}"/>
                                                                <Run>)
                                                         </Run>
                                                    </TextBlock>
                                                    <TextBlock VerticalAlignment="Center">
                                                    <Run>型号:</Run>
                                                    <Run Text="{Binding Component.Designation}"/>
                                                    </TextBlock>
                                                    <StackPanel.ToolTip>
                                                        <ToolTip HorizontalAlignment="Left" VerticalAlignment="Top">
                                                            <TextBlock>                                                           
                                                            <Run>内圈频率:</Run>
                                                            <Run Text="{Binding Component.InnerRingFrequency}"/>
                                                            <LineBreak/>
                                                            <Run>外圈频率:</Run>
                                                            <Run Text="{Binding Component.OuterRingFrequency}"/>
                                                            <LineBreak/>
                                                            <Run>滚动体频率:</Run>
                                                            <Run Text="{Binding Component.RollerFrequency}"/>
                                                            <LineBreak/>
                                                            <Run>保持架频率:</Run>
                                                            <Run Text="{Binding Component.MaintainsFrequency}"/>
                                                            </TextBlock>
                                                        </ToolTip>
                                                    </StackPanel.ToolTip>
                                                </StackPanel>

                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type model:GearComponent}">
                                                <StackPanel Orientation="Horizontal" >
                                                    <Image Width="24" Height="24" Source="/AIC.Resources;component/Images/Gear.png"/>
                                                    <TextBlock Margin="5,0" VerticalAlignment="Center">
                                                         <Run Text="{Binding Name}"/>
                                                                <Run>(</Run>
                                                                <Run Text="{Binding Component.Name}"/>
                                                                <Run>)
                                                         </Run>
                                                    </TextBlock>
                                                    <TextBlock VerticalAlignment="Center">
                                                    <Run>齿数:</Run>
                                                    <Run Text="{Binding Component.TeethNumber}"/>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type model:BeltComponent}">
                                                <StackPanel Orientation="Horizontal" >
                                                    <Image Width="24" Height="24" Source="/AIC.Resources;component/Images/Belt.png"/>
                                                    <TextBlock Margin="5,0" VerticalAlignment="Center">
                                                         <Run Text="{Binding Name}"/>
                                                                <Run>(</Run>
                                                                <Run Text="{Binding Component.Name}"/>
                                                                <Run>)
                                                         </Run>
                                                    </TextBlock>
                                                    <TextBlock VerticalAlignment="Center">
                                                    <Run>皮带轮直径:</Run>
                                                    <Run Text="{Binding Component.PulleyDiameter}"/>
                                                    <Run>皮带长度:</Run>
                                                    <Run Text="{Binding Component.BeltLength}"/>
                                                    </TextBlock>
                                                    <StackPanel.ToolTip>
                                                        <ToolTip HorizontalAlignment="Left" VerticalAlignment="Top">
                                                            <TextBlock>                                 
                                                <Run>转频:</Run> 
                                                <Run Text="{Binding Component.Frequency, Mode=OneWay}"/>
                                                            </TextBlock>
                                                        </ToolTip>
                                                    </StackPanel.ToolTip>
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type model:ImpellerComponent}">
                                                <StackPanel Orientation="Horizontal" >
                                                    <Image Width="24" Height="24" Source="/AIC.Resources;component/Images/Impeller.png"/>
                                                    <TextBlock Margin="5,0" VerticalAlignment="Center">
                                                         <Run Text="{Binding Name}"/>
                                                                <Run>(</Run>
                                                                <Run Text="{Binding Component.Name}"/>
                                                                <Run>)
                                                         </Run>
                                                    </TextBlock>
                                                    <TextBlock VerticalAlignment="Center">             
                                                    <Run>叶片数:</Run>
                                                    <Run Text="{Binding Component.NumberOfBlades}"/>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type model:MotorComponent}">
                                                <StackPanel Orientation="Horizontal" Background="Transparent">
                                                    <Image Width="24" Height="24" Source="/AIC.Resources;component/Images/Motor.png"/>
                                                    <TextBlock Margin="5,0" VerticalAlignment="Center">
                                                         <Run Text="{Binding Name}"/>
                                                                <Run>(</Run>
                                                                <Run Text="{Binding Component.Name}"/>
                                                                <Run>)
                                                         </Run>
                                                    </TextBlock>
                                                    <StackPanel VerticalAlignment="Center" >
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="电网工频:" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Component.LineFrequency}" VerticalAlignment="Center"/>
                                                            <TextBlock Text="磁极数:" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Component.Poles}" VerticalAlignment="Center"/>
                                                            <TextBlock Text="转子条数:" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Component.RotorBars}" VerticalAlignment="Center"/>
                                                            <TextBlock Text="定子线圈数:" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Component.StatorCoils}" VerticalAlignment="Center"/>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="绕组槽数:" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Component.WindingSlots}" VerticalAlignment="Center"/>
                                                            <TextBlock Text="可控硅整流器数:" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Component.SCRs}" VerticalAlignment="Center"/>
                                                            <TextBlock Text="交流电机:" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Component.IsAC}" VerticalAlignment="Center"/>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.Resources>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding DataContext.EditComponentCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}" CommandParameter="{Binding}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ListBox>
                                </Border>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="0,0,5,0"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                                <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                            </Style>
                        </DataGrid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=gridShafts}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </TabItem>
                <TabItem Header="轴承模板" Style="{StaticResource TabItemStyle}" IsSelected="{Binding BearingsIsSelected}">
                    <DataGrid x:Name="gridBearings" GridLinesVisibility="None" 
                                 ItemsSource="{Binding BearingsView}" SelectedItem="{Binding SelectedBearing}" SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="轴承名称" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="轴承型号" Binding="{Binding Designation}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="节圆直径" Binding="{Binding PitchDiameter}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="滚子直径" Binding="{Binding RollerDiameter}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="接触角"  Binding="{Binding ContactAngle}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="滚子个数" Binding="{Binding NumberOfRoller}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="外圈直径"  Binding="{Binding OuterRingDiameter}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="内圈直径"  Binding="{Binding InnerRingDiameter}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="列数"  Binding="{Binding NumberOfColumns}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="内环特征频率"  Binding="{Binding InnerRingFrequency}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="外环特征频率"  Binding="{Binding OuterRingFrequency}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="滚动体特征频率"  Binding="{Binding RollerFrequency}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="保持架特征频率"  Binding="{Binding MaintainsFrequency}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="轴承系列"  Binding="{Binding BearingSeries}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="轴承系列ID"  Binding="{Binding BearingSeriesID}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="转速" Binding="{Binding RPM}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="0,0,5,0"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                                <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                            </Style>
                        </DataGrid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=gridBearings}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </TabItem>
                <TabItem Header="皮带模板" Style="{StaticResource TabItemStyle}" IsSelected="{Binding BeltsIsSelected}">
                    <DataGrid x:Name="gridBelts" GridLinesVisibility="None" 
                                 ItemsSource="{Binding BeltsView}" SelectedItem="{Binding SelectedBelt}" SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="轴承名称" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="皮带轮直径" Binding="{Binding PulleyDiameter}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="皮带长度" Binding="{Binding BeltLength}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="频率" Binding="{Binding Frequency}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="0,0,5,0"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                                <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                            </Style>
                        </DataGrid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=gridBelts}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </TabItem>
                <TabItem Header="齿轮模板" Style="{StaticResource TabItemStyle}" IsSelected="{Binding GearsIsSelected}">
                    <DataGrid x:Name="gridGears" GridLinesVisibility="None" 
                                 ItemsSource="{Binding GearsView}" SelectedItem="{Binding SelectedGear}" SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="齿轮名称" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="齿数" Binding="{Binding TeethNumber}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="0,0,5,0"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                                <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                            </Style>
                        </DataGrid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=gridGears}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </TabItem>
                <TabItem Header="叶轮模板" Style="{StaticResource TabItemStyle}" IsSelected="{Binding ImpellersIsSelected}">
                    <DataGrid x:Name="gridImpellers" GridLinesVisibility="None" 
                                 ItemsSource="{Binding ImpellersView}" SelectedItem="{Binding SelectedImpeller}" SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="叶轮名称" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="叶片数" Binding="{Binding NumberOfBlades}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="0,0,5,0"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                                <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                            </Style>
                        </DataGrid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=gridImpellers}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </TabItem>
                <TabItem Header="电机模板" Style="{StaticResource TabItemStyle}" IsSelected="{Binding MotorsIsSelected}">
                    <DataGrid x:Name="gridMotors" GridLinesVisibility="None" 
                                 ItemsSource="{Binding MotorsView}" SelectedItem="{Binding SelectedMotor}"  SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="电机名称" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="电网工频(Hz)" Binding="{Binding LineFrequency}" IsReadOnly="True"/>
                            <DataGridComboBoxColumn Header="电机模式" ItemsSource="{Binding Source={StaticResource motorTypeEnum}}" SelectedValueBinding="{Binding MotorType,UpdateSourceTrigger=LostFocus}" IsReadOnly="True">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn Header="磁极数(交流)" Binding="{Binding Poles}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="转子条数(交流)" Binding="{Binding RotorBars}" IsReadOnly="True" />
                            <DataGridTextColumn Header="定子线圈数(交流)" Binding="{Binding StatorCoils}" IsReadOnly="True" />
                            <DataGridTextColumn Header="绕组槽数(交流)" Binding="{Binding WindingSlots}" IsReadOnly="True" />
                            <DataGridTextColumn Header="可控硅整流器数(直流)" Binding="{Binding SCRs}" IsReadOnly="True" />
                        </DataGrid.Columns>
                        <DataGrid.ColumnHeaderStyle>
                            <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="0,0,5,0"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                                <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                            </Style>
                        </DataGrid.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=gridMotors}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</core:DisposableUserControl>
