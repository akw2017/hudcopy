<core:DisposableUserControl x:Class="AIC.DeviceDataPage.Views.DeviceRunAnalyzeListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"        
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:timeTool= "clr-namespace:Loya.Dameer;assembly=Loya.Dameer"
             xmlns:control="clr-namespace:AIC.Core.OrganizationModels;assembly=AIC.Core"   
             xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
             xmlns:coreType="clr-namespace:AIC.CoreType;assembly=AIC.CoreType"
             Style="{DynamicResource AsyncWorkUserControlStyle}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AIC.Resources;component/Themes/ScrollBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <core:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
            <core:GradeToStringConverter x:Key="gradeToStringConverter"/>
            <core:StringShowLenghtConverter x:Key="stringShowLenghtConverter"/>
                <DataTemplate x:Key="enumComboItemTemplate">
                <TextBlock Text="{Binding Path=., Converter={StaticResource ResourceKey=enumDescriptionConverter}}" />
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="grdWorkbench">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TreeView Grid.Row="0" Grid.RowSpan="4" Name="treeview"                        
                        ItemsSource="{Binding OrganizationTreeItems}" 
                        Style="{DynamicResource VirtualisedMetroTreeView}" >
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type control:OrganizationTreeItemViewModel}" ItemsSource="{Binding Path=Children}" >
                    <StackPanel Orientation="Horizontal">
                        <Path x:Name="IconPath" Width="18" Height="18" Stretch="Fill" Fill="{DynamicResource AccentColorBrush}" Data="F1 M 24.0033,56.0078L 24.0033,38.0053L 22.0031,40.0056L 19.0027,35.0049L 38.0053,20.0028L 45.0063,25.5299L 45.0063,21.753L 49.0068,21.0029L 49.0068,28.6882L 57.008,35.0049L 54.0075,40.0056L 52.0073,38.0053L 52.0073,56.0078L 24.0033,56.0078 Z M 38.0053,26.9204L 27.0038,36.005L 27.0038,53.0074L 33.0046,53.0074L 33.0046,42.006L 43.006,42.006L 43.006,53.0074L 49.0068,53.0074L 49.0068,36.005L 38.0053,26.9204 Z "/>
                        <Grid Margin="2,0,2,0">
                            <TextBlock x:Name="txtName" Text="{Binding Name, Mode=TwoWay}" Width="Auto"/>
                        </Grid>
                    </StackPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding T_Organization.Level}" Value="0">
                            <Setter TargetName="IconPath" Property="Data" Value="F1 M 28.5,20.5833L 47.5,20.5833L 47.5,23.75L 28.5,23.75L 28.5,20.5833 Z M 49.0833,31.6667L 64.9166,31.6667L 64.9166,34.8334L 49.0833,34.8334L 49.0833,31.6667 Z M 28.5,25.3334L 34.8333,25.3334L 41.1666,25.3334L 47.5,25.3334L 47.5,52.25L 41.1666,52.25L 41.1666,42.75L 34.8333,42.75L 34.8333,52.25L 28.5,52.25L 28.5,25.3334 Z M 49.0833,52.25L 49.0833,36.4167L 53.8333,36.4167L 60.1666,36.4167L 64.9166,36.4167L 64.9166,52.25L 60.1666,52.25L 60.1666,44.3333L 53.8333,44.3333L 53.8333,52.25L 49.0833,52.25 Z M 11.0833,52.25L 11.0833,44.3333L 11.0833,41.1667L 19.7917,34.8334L 26.9167,41.1667L 26.9167,44.3333L 26.9167,52.25L 22.1667,52.25L 22.1667,44.3333L 15.8333,44.3333L 15.8333,52.25L 11.0833,52.25 Z M 19.7916,29.6875L 26.9166,36.0209L 26.9166,39.1875L 19.7916,32.8542L 9.49999,40.375L 9.49999,37.2084L 19.7916,29.6875 Z "/>
                            <Setter TargetName="IconPath" Property="Width" Value="24"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding Alarm}" Value="Invalid">
                            <Setter TargetName="txtName" Property="Foreground" Value="Pink"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="HighPreAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="LowPreAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="HighAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="DarkOrange"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="LowAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="DarkOrange" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="HighDanger">
                            <Setter TargetName="txtName" Property="Foreground" Value="Red"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="LowDanger">
                            <Setter TargetName="txtName" Property="Foreground" Value="Red" />
                        </DataTrigger>-->
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type control:DeviceTreeItemViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <Path Width="18" Height="18" Stretch="Fill" Fill="{DynamicResource AccentColorBrush}" Data="F1 M 24.69,17.5542L 27.9094,14.793C 28.5138,15.05 29.0876,15.3647 29.6241,15.7302L 29.0458,19.93L 33.2747,20.2541C 33.5166,20.8524 33.7023,21.4794 33.8252,22.1286L 30.4458,24.69L 33.207,27.9094C 32.95,28.5137 32.6353,29.0876 32.2698,29.6241L 28.07,29.0458L 27.7459,33.2747C 27.1476,33.5166 26.5206,33.7023 25.8714,33.8252L 23.3099,30.4458L 20.0906,33.207C 19.4862,32.95 18.9124,32.6353 18.3759,32.2698L 18.9542,28.0699L 14.7253,27.7459C 14.4834,27.1476 14.2977,26.5206 14.1748,25.8713L 17.5542,23.3099L 14.793,20.0906C 15.05,19.4862 15.3647,18.9124 15.7302,18.3759L 19.93,18.9542L 20.2541,14.7252C 20.8524,14.4834 21.4794,14.2977 22.1286,14.1748L 24.69,17.5542 Z M 24,20C 21.7909,20 20,21.7909 20,24C 20,26.2091 21.7909,28 24,28C 26.2091,28 28,26.2091 28,24C 28,21.7909 26.2091,20 24,20 Z " />
                        <Grid Margin="2,0,2,0">
                            <TextBlock x:Name="txtName" Text="{Binding Name, Mode=TwoWay}" Width="Auto" />
                        </Grid>
                    </StackPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding Alarm}" Value="Invalid">
                            <Setter TargetName="txtName" Property="Foreground" Value="Pink"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="HighPreAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="LowPreAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="HighAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="DarkOrange"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="LowAlarm">
                            <Setter TargetName="txtName" Property="Foreground" Value="DarkOrange" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="HighDanger">
                            <Setter TargetName="txtName" Property="Foreground" Value="Red"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Alarm}" Value="LowDanger">
                            <Setter TargetName="txtName" Property="Foreground" Value="Red" />
                        </DataTrigger>-->
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
            </TreeView.Resources>

            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource LineTreeViewItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=OneTime}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=OneTime}" />
                </Style>
            </TreeView.ItemContainerStyle>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedTreeChangedComamnd}" CommandParameter="{Binding SelectedItem, ElementName=treeview}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DoubleClickAddDataCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </TreeView>

        <GridSplitter x:Name="gsSplitterr"  Grid.Row="0" Grid.Column="1" Grid.RowSpan="4" Width="3" Background="{DynamicResource AccentColorBrush}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Style="{StaticResource GridSplitterStyleExpend}"/>

        <Border Grid.Row="0" Grid.Column="2" Padding="2" Background="{DynamicResource AccentColorBrush2}">
            <WrapPanel>
                <TextBlock Text="查询时间" Margin="4,0,0,0" VerticalAlignment="Center"/>
                <timeTool:Dameer Format="Custom" CustomFormat="yyyy-MM-dd" ShowCheckBox="False"  Value="{Binding StartTime}" Foreground="{DynamicResource AccentColorBrush}" VerticalAlignment="Center"  Margin="4,0,0,0"/>
                <TextBlock Text="查询天数" Margin="4,0,0,0" VerticalAlignment="Center" />
                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding DayItems}" SelectedItem="{Binding SelectedDay}" Style="{DynamicResource VirtualisedMetroComboBox}"  Margin="4,0,0,0"/>

                <Button Command="{Binding SearchCommand}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/search.png"  />
                            <TextBlock Text="{DynamicResource query}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>
            </WrapPanel>
        </Border>
        <DataGrid x:Name="gridview" Grid.Row="1" Grid.Column="2" GridLinesVisibility="None" Margin="0,1,0,0"
                                 ItemsSource="{Binding DevicesView}" SelectionMode="Single"          
                                 CanUserAddRows="False" ColumnWidth="Auto" VirtualizingStackPanel.VirtualizationMode="Recycling" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                                 AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" RowDetailsVisibilityMode="Collapsed" ScrollViewer.CanContentScroll="True">
            <DataGrid.Resources>
                <ControlTemplate TargetType="{x:Type GroupItem}" x:Key="defaultGroup">
                    <ItemsPresenter />
                </ControlTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="设备名称"  Binding="{Binding DeviceTreeItemViewModel.Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="开始时间"  Binding="{Binding StartTime, StringFormat=yyyy-MM-dd HH:mm:ss}" IsReadOnly="True"/>
                <DataGridTextColumn Header="结束时间"  Binding="{Binding EndTime, StringFormat=yyyy-MM-dd HH:mm:ss}" IsReadOnly="True"/>
                <DataGridTextColumn Header="预警次数"  Binding="{Binding PreAlarmCount}" IsReadOnly="True"/>
                <DataGridTextColumn Header="报警次数"  Binding="{Binding AlarmCount}" IsReadOnly="True"/>
                <DataGridTextColumn Header="危险次数"  Binding="{Binding DangerCount}" IsReadOnly="True"/>
                <DataGridTextColumn Header="分析时间"  Binding="{Binding ACQDatetime, StringFormat=yyyy-MM-dd HH:mm:ss}" IsReadOnly="True"/>
                <DataGridTextColumn Header="级别"  Binding="{Binding AlarmGrade,Converter={StaticResource gradeToStringConverter}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="最大值"  Binding="{Binding MaxResult,StringFormat={}{0:F1}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="最小值"  Binding="{Binding MinResult,StringFormat={}{0:F1}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="单位"  Binding="{Binding Unit}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="诊断结果">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding DiagnosticInfo,Converter={StaticResource stringShowLenghtConverter}}" VerticalAlignment="Center"/>
                                <TextBlock x:Name="txt" ToolTip="诊断详情" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.MouseDoubleClickComamnd, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"> <TextBlock Text="..."/> </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding DiagnosticAdvice}" Value="{x:Null}">
                                    <Setter TargetName="txt" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" BorderThickness="0,0,0,0">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal" Width="Auto" Height="24">
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0"/>
                                                    <!--<TextBlock FontWeight="Bold" Text=":"/>
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                                    <TextBlock FontWeight="Bold" Text="个测点"/>-->
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <Border BorderBrush="{DynamicResource AccentColorBrush2}" BorderThickness="2">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Name}" Value="">
                                    <Setter Property="Template" Value="{StaticResource defaultGroup}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GroupStyle.ContainerStyle>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                    <Setter Property="Margin" Value="0,0,20,0"/>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="Invalid">
                            <Setter  Property="Foreground" Value="Pink"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="HighPreAlarm">
                            <Setter Property="Foreground" Value="Yellow"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="LowPreAlarm">
                            <Setter Property="Foreground" Value="Yellow"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="HighAlarm">
                            <Setter Property="Foreground" Value="DarkOrange"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="LowAlarm">
                            <Setter Property="Foreground" Value="DarkOrange" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="HighDanger">
                            <Setter Property="Foreground" Value="Red"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="LowDanger">
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AlarmGrade}" Value="DisConnect">
                            <Setter Property="Foreground" Value="DarkRed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource AccentColorBrush4}" />
                </Style>
            </DataGrid.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedDataGridChangedComamnd}" CommandParameter="{Binding SelectedItem, ElementName=gridview}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding MouseDoubleClickComamnd}" CommandParameter="{Binding SelectedItem, ElementName=gridview}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>

        <GridSplitter Grid.Row="2" Grid.Column="2" Height="3" Background="{DynamicResource AccentColorBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

        <TabControl Grid.Row="3" Grid.Column ="2">
            <TabItem Header="总览" Style="{x:Null}">
                <Grid Name="gridChart"/>
            </TabItem>
            <TabItem Header="详情" Style="{x:Null}">
                <Grid Name="gridChartMore"/>
            </TabItem>
        </TabControl>
    </Grid>
</core:DisposableUserControl>
