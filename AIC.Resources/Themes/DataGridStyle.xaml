<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:local="clr-namespace:AIC.Resources.Themes">
   

    <Style x:Key="MetroDataGridRow"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="Controls:DataGridRowHelper.SelectionUnit"
                Value="{Binding Path=SelectionUnit, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate"
                Value="{StaticResource DefaultRowValidationErrorTemplate}" />
        <Style.Triggers>

            <!-- IsSelected -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridRowHelper.SelectionUnit), RelativeSource={RelativeSource Self}}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource DarkLinearAccentColorBrush}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
            </MultiDataTrigger>

            <!-- IsSelected and Selector.IsSelectionActive -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridRowHelper.SelectionUnit), RelativeSource={RelativeSource Self}}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                    <Condition Binding="{Binding Path=(Selector.IsSelectionActive), RelativeSource={RelativeSource Self}}"
                               Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}" />
            </MultiDataTrigger>

            <!-- IsMouseOver -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridRowHelper.SelectionUnit), RelativeSource={RelativeSource Self}}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
            </MultiDataTrigger>

            <!-- IsEnabled -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridRowHelper.SelectionUnit), RelativeSource={RelativeSource Self}}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                               Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </MultiDataTrigger>

            <!-- IsEnabled and IsSelected -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridRowHelper.SelectionUnit), RelativeSource={RelativeSource Self}}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                               Value="false" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                <Setter Property="Background"
                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MetroDataGridCell"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Controls:DataGridCellHelper.SaveDataGrid"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!-- IsSelected -->
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="Cell" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource DarkLinearAccentColorBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="CellOrRowHeader" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource DarkLinearAccentColorBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
            </MultiDataTrigger>

            <!-- IsKeyboardFocusWithin -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="Cell" />
                    <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.FocusBorderBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="CellOrRowHeader" />
                    <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.FocusBorderBrush}" />
            </MultiDataTrigger>

            <!-- IsSelected and Selector.IsSelectionActive -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                               Value="true" />
                    <Condition Property="Selector.IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="Cell" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                    <Condition Binding="{Binding Path=(Selector.IsSelectionActive), RelativeSource={RelativeSource Self}}"
                               Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="CellOrRowHeader" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                    <Condition Binding="{Binding Path=(Selector.IsSelectionActive), RelativeSource={RelativeSource Self}}"
                               Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
            </MultiDataTrigger>

            <!-- IsMouseOver -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="Cell" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="CellOrRowHeader" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
            </MultiDataTrigger>

            <!-- IsEnabled -->
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>

            <!-- IsEnabled and IsSelected -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled"
                               Value="false" />
                    <Condition Property="IsSelected"
                               Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="Cell" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                               Value="false" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Controls:DataGridCellHelper.DataGrid).SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="CellOrRowHeader" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
                               Value="false" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MetroDataGrid"
           TargetType="{x:Type DataGrid}">
        <Setter Property="MinRowHeight"
                Value="25" />
        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BorderThickness"
                Value="0,0,0,0" />
        <Setter Property="HorizontalGridLinesBrush"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="VerticalGridLinesBrush"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="ColumnHeaderStyle"
                Value="{StaticResource MetroDataGridColumnHeader}" />
        <Setter Property="RowHeaderStyle"
                Value="{StaticResource MetroDataGridRowHeader}" />
        <Setter Property="CellStyle"
                Value="{StaticResource MetroDataGridCell}" />
        <Setter Property="RowStyle"
                Value="{StaticResource MetroDataGridRow}" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background"
                            Value="{DynamicResource GrayBrush7}" />
                    <Setter Property="Width"
                            Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Fill="{TemplateBinding Background}"
                                           Height="{TemplateBinding Height}"
                                           Width="{TemplateBinding Width}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer"
                                      Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=MetroDataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Grid Grid.Row="1"
                                              Grid.ColumnSpan="2">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    Grid.ColumnSpan="2" />
                                        </Grid>
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   Grid.Row="1"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1"
                                              Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>