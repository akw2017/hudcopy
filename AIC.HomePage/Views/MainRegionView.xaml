<UserControl x:Class="AIC.HomePage.Views.MainRegionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AIC.HomePage.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:menu="clr-namespace:AIC.Core.ControlModels;assembly=AIC.Core"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
             Style="{DynamicResource AsyncWorkUserControlStyle}"
             mc:Ignorable="d" 
             x:Name="usercontrol"
             d:DesignHeight="300" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <core:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <Style TargetType="{x:Type Controls:WindowButtonCommands}">
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="Height"
                        Value="24" />
            </Style>
            <Ellipse x:Key="AppThemeMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     StrokeThickness="1"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Ellipse x:Key="AccentMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Style x:Key="AppThemeMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon"
                        Value="{StaticResource AppThemeMenuIcon}" />
                <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
            </Style>
            <Style x:Key="AccentColorMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon"
                        Value="{StaticResource AccentMenuIcon}" />
                <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
            </Style>
        
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="grid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Menu Background="{DynamicResource AccentColorBrush}" MouseEnter="Menu_MouseEnter" MouseLeave="Menu_MouseLeave">
                <MenuItem Header="{DynamicResource menuOnlineData}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuOnlineDataDiagram}" Command="{Binding NavigateCommand}" CommandParameter="MenuOnlineDataDiagram" Visibility="{Binding MenuManageList.MenuOnlineDataDiagram.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuOnlineDataDiagram.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuOnlineDataList}" Command="{Binding NavigateCommand}" CommandParameter="MenuOnlineDataList" Visibility="{Binding MenuManageList.MenuOnlineDataList.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuOnlineDataList.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuOnlineDataTile}" Command="{Binding NavigateCommand}" CommandParameter="MenuOnlineDataTile" Visibility="{Binding MenuManageList.MenuOnlineDataTile.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuOnlineDataTile.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuOnlineDataOverview}" Command="{Binding NavigateCommand}" CommandParameter="MenuOnlineDataOverview" Visibility="{Binding MenuManageList.MenuOnlineDataOverview.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuOnlineDataOverview.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuOnlineDataDiagnosis}" Command="{Binding NavigateCommand}" CommandParameter="MenuOnlineDataDiagnosis" Visibility="{Binding MenuManageList.MenuOnlineDataDiagnosis.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuOnlineDataDiagnosis.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuOnlineDataStatistics}" Command="{Binding NavigateCommand}" CommandParameter="MenuOnlineDataStatistics" Visibility="{Binding MenuManageList.MenuOnlineDataStatistics.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuOnlineDataStatistics.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource menuHistoricalData}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuHistoryDataList}" Command="{Binding NavigateCommand}" CommandParameter="MenuHistoryDataList" Visibility="{Binding MenuManageList.MenuHistoryDataList.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuHistoryDataList.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuHistoryDataDiagram}" Command="{Binding NavigateCommand}" CommandParameter="MenuHistoryDataDiagram" Visibility="{Binding MenuManageList.MenuHistoryDataDiagram.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuHistoryDataDiagram.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuHistoryDataStatistics}" Command="{Binding NavigateCommand}" CommandParameter="MenuHistoryDataStatistics" Visibility="{Binding MenuManageList.MenuHistoryDataStatistics.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuHistoryDataStatistics.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuDataTrendChart}" Command="{Binding NavigateCommand}" CommandParameter="MenuDataTrendChart" Visibility="{Binding MenuManageList.MenuDataTrendChart.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuDataTrendChart.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuSystemEventList}" Command="{Binding NavigateCommand}" CommandParameter="MenuSystemEventList" Visibility="{Binding MenuManageList.MenuSystemEventList.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuSystemEventList.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource menuDeviceData}" Background="{DynamicResource TransparentWhiteBrush}">
                    <!--昌邑石化-->
                    <MenuItem Header="{DynamicResource menuDeviceRunStatus}" Command="{Binding NavigateCommand}" CommandParameter="MenuDeviceRunStatus" Visibility="{Binding MenuManageList.MenuDeviceRunStatus.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuDeviceRunStatus.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuDeviceRunAnalyze}" Command="{Binding NavigateCommand}" CommandParameter="MenuDeviceRunAnalyze" Visibility="{Binding MenuManageList.MenuDeviceRunAnalyze.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuDeviceRunAnalyze.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuDeviceHourlyData}" Command="{Binding NavigateCommand}" CommandParameter="MenuDeviceHourlyData" Visibility="{Binding MenuManageList.MenuDeviceHourlyData.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuDeviceHourlyData.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="新接口测试" Command="{Binding NavigateCommand}" CommandParameter="MenuDeviceNewData">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/cog_edit.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource menuDBManage}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuExportDBData}" Command="{Binding NavigateCommand}" CommandParameter="MenuExportDBData" Visibility="{Binding MenuManageList.MenuExportDBData.Visibility}">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="{Binding MenuManageList.MenuExportDBData.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuImportDBData}" Command="{Binding NavigateCommand}" CommandParameter="MenuImportDBData" Visibility="{Binding MenuManageList.MenuImportDBData.Visibility}">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="{Binding MenuManageList.MenuImportDBData.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuFilterDBData}" Command="{Binding NavigateCommand}" CommandParameter="MenuFilterDBData" Visibility="{Binding MenuManageList.MenuFilterDBData.Visibility}">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="{Binding MenuManageList.MenuFilterDBData.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource menuGeneralManage}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuLogin}" Command="{Binding LoginCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/user_go.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuLogout}" Command="{Binding LogoutCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/user_delete.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuExit}" Command="{Binding ExitCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/export.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuLock}" Command="{Binding LockCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/lock.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuUnLock}" Command="{Binding UnLockCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/lock_open.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuUserManage}" Command="{Binding NavigateCommand}" CommandParameter="MenuUserManage" Visibility="{Binding MenuManageList.MenuUserManage.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuUserManage.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuRoleManage}" Command="{Binding NavigateCommand}" CommandParameter="MenuRoleManage" Visibility="{Binding MenuManageList.MenuRoleManage.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuRoleManage.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuMenuManage}" Command="{Binding NavigateCommand}" CommandParameter="MenuMenuManage" Visibility="{Binding MenuManageList.MenuMenuManage.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuMenuManage.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuOrganizationManage}" Command="{Binding NavigateCommand}" CommandParameter="MenuOrganizationManage" Visibility="{Binding MenuManageList.MenuOrganizationManage.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuOrganizationManage.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuManageLog}" Command="{Binding NavigateCommand}" CommandParameter="MenuManageLog" Visibility="{Binding MenuManageList.MenuManageLog.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuManageLog.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuServerSetting}" Command="{Binding NavigateCommand}" CommandParameter="MenuServerSetting" Visibility="{Binding MenuManageList.MenuServerSetting.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuServerSetting.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuCollectorSetting}" Command="{Binding NavigateCommand}" CommandParameter="MenuCollectorSetting" Visibility="{Binding MenuManageList.MenuCollectorSetting.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuCollectorSetting.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <!--<MenuItem Header="{DynamicResource menuEquipmentSetting}" Command="{Binding NavigateCommand}" CommandParameter="MenuEquipmentSetting" Visibility="{Binding MenuManageList.MenuEquipmentSetting.Visibility}">
                    <MenuItem.Icon>
                        <Image Source="/AIC.Resources;component/Images/chart_organisation.png"/>
                    </MenuItem.Icon>
                </MenuItem>-->
                </MenuItem>
                <MenuItem Header="{DynamicResource menuSystemManage}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuTheme}" Background="{DynamicResource TransparentWhiteBrush}"                         
                          ItemsSource="{Binding AppThemes, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AppThemeMenuItemStyle}">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="/AIC.Resources;component/Images/color.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuStyle}" Background="{DynamicResource TransparentWhiteBrush}"                         
                          ItemsSource="{Binding AccentColors, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AccentColorMenuItemStyle}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/color_swatch.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuWindow}" Background="{DynamicResource TransparentWhiteBrush}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/application_edit.png"/>
                        </MenuItem.Icon>
                        <MenuItem IsCheckable="True" Header="{DynamicResource menuShowInTaskbar}"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=ShowInTaskbar}" />
                        <MenuItem IsCheckable="True" Header="{DynamicResource menuTopmost}"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=Topmost}" />
                        <MenuItem IsCheckable="True" Header="{DynamicResource menuMaximizeFullScreen}"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=IgnoreTaskbarOnMaximize}" />
                        <MenuItem Header="关闭打开窗口" Command="{Binding CloseWindowsCommand}"/>

                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuLanguage}" >
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/arrow_switch.png"/>
                        </MenuItem.Icon>
                        <MenuItem Header="{DynamicResource menuChinese}" IsCheckable="True" IsChecked="{Binding ChineseChecked}" />
                        <MenuItem Header="{DynamicResource menuEnglish}" IsCheckable="True" IsChecked="{Binding EnglishChecked}"/>
                    </MenuItem>
                    <!--<MenuItem Header="{DynamicResource menuHelp}">
                    <MenuItem.Icon>
                        <Image Height="16" Width="16" Source="/AIC.Resources;component/Images/001_30.png"/>
                    </MenuItem.Icon>
                </MenuItem>-->
                    <!--<MenuItem Header="{DynamicResource menuAbout}" Command="{Binding AboutCommand}">
                    <MenuItem.Icon>
                        <Image Height="16" Width="16" Source="/AIC.Resources;component/Images/001_15.png"/>
                    </MenuItem.Icon>
                </MenuItem>-->
                    <!--<MenuItem Header="{DynamicResource menuFeedback}" Command="{Binding FeedbackCommand}">
                    <MenuItem.Icon>
                        <Image Source="/AIC.Resources;component/Images/email_error.png"/>
                    </MenuItem.Icon>
                </MenuItem>-->
                    <MenuItem Header="{DynamicResource menuLocalSetting}" Command="{Binding SettingCommmad}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/wrench_orange.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuHistoryPlaySetting}" Command="{Binding HistoryQuickPlaySettingCommmad}">
                        <!--昌邑石化-->
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="/AIC.Resources;component/Images/film_start.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuAboutVersion}" Command="{Binding AboutVersionCommmad}">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="/AIC.Resources;component/Images/001_15.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuAbnormalList}" Command="{Binding AbnormalListCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/table_error.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuSystemLog}" Command="{Binding SystemLogCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/folder_error.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuScreenShotFile}" Command="{Binding ScreenShotFolderCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/folder_picture.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

            </Menu>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="MenuRefreshData" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="{DynamicResource refresh}"/> </Hyperlink></TextBlock>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <Hyperlink Click="ScreenShot_Click" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="{DynamicResource screenShot}"/> </Hyperlink></TextBlock>
                <ToggleButton IsChecked="{Binding Pause}" Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0" Padding="0" FontSize="15" Cursor="Hand" Template="{StaticResource ToggleTextButton}" Foreground="{DynamicResource TextBrush}" Content="{DynamicResource pause}"/>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <Hyperlink Command="{Binding EditPwdCommand}" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="修改密码"/> </Hyperlink></TextBlock>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <Hyperlink Command="{Binding LogoutCommand}" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="注销"/> </Hyperlink></TextBlock>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <TextBlock Text="{Binding LoginUser}"/></TextBlock>
            </StackPanel>
          
            <Grid Grid.Row="1" Background="{DynamicResource AccentColorBrush}">
                <TextBlock FontSize="16" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="2" Text="版权所有Copyright©2017：北京航天智控监测技术研究院"/>
            </Grid>
            <!--青岛众志测控技术有限公司-->
            <!--昌邑石化-->

            <Grid Grid.Row="1" Background="{DynamicResource AccentColorBrush}" Visibility="Collapsed">
                <ToolBar Visibility="Collapsed">
                    <Button Command="{Binding NavigateCommand}" CommandParameter="MenuOnlineDataDiagram" Visibility="{Binding MenuManageList.MenuOnlineDataDiagram.Visibility}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Stretch="None" Source="/AIC.Resources;component/Images/application_view_gallery.png"  />
                                <TextBlock Text="{DynamicResource menuOnlineData}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button Command="{Binding NavigateCommand}" CommandParameter="MenuHistoryData" Visibility="{Binding MenuManageList.MenuHistoryDataDiagram.Visibility}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Stretch="None" Source="/AIC.Resources;component/Images/picture_save.png"  />
                                <TextBlock Text="{DynamicResource menuHistoricalData}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!--<Button Command="{Binding NavigateCommand}" CommandParameter="MenuAlarmData" Visibility="{Binding MenuManageList.MenuAlarmData.Visibility}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/database_error.png"  />
                            <TextBlock Text="{DynamicResource menuAlartmData}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                </Button>-->
                    <!--<Separator Visibility="{Binding Login1Visibility}"></Separator>
                <Button x:Name="serverbtn" Command="{Binding NavigateCommand}" CommandParameter="MenuServerSetting" Visibility="{Binding MenuManageList.MenuServerSetting.Visibility}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/database_refresh.png"  />
                            <TextBlock Text="{DynamicResource menuServerSetting}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Command="{Binding NavigateCommand}" CommandParameter="MenuCollectorSetting" Visibility="{Binding MenuManageList.MenuCollectorSetting.Visibility}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/brick_edit.png"  />
                            <TextBlock Text="{DynamicResource menuCollectorSetting}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                </Button>-->
                    <!--<Button Command="{Binding NavigateCommand}" CommandParameter="MenuEquipmentSetting" Visibility="{Binding MenuManageList.MenuEquipmentSetting.Visibility}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/database_save.png"  />
                            <TextBlock Text="{DynamicResource menuEquipmentSetting}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                </Button>-->
                    <!--<Separator Visibility="{Binding Login2Visibility}"></Separator>-->


                </ToolBar>
                <ToolBar HorizontalAlignment="Right" Visibility="Collapsed">
                    <Button Command="{Binding NavigateCommand}" CommandParameter="MenuRefreshData" Visibility="{Binding LoginVisibility}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Stretch="None" Source="/AIC.Resources;component/Images/database_refresh.png"  />
                                <TextBlock Text="{DynamicResource refresh}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button Command="{Binding NavigateCommand}" CommandParameter="test" Visibility="Collapsed">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Stretch="None" Source="/AIC.Resources;component/Images/pencil.png"  />
                                <TextBlock Text="测试" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button x:Name="ScreenShot" Click="ScreenShot_Click" Visibility="{Binding LoginVisibility}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Stretch="None" Source="/AIC.Resources;component/Images/cut.png"  />
                                <TextBlock Text="{DynamicResource screenShot}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <ToggleButton x:Name="togglebtn" IsChecked="{Binding Pause}" Template="{StaticResource PauseToggleButton}" Visibility="{Binding LoginVisibility}" />
                </ToolBar>
            </Grid>

            <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" HorizontalAlignment="Center" BorderBrush="Red" BorderThickness="2" CornerRadius="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}[X{1}] {2:yyyy-MM-dd HH:mm:ss}">
                                <Binding Path="HistoryModeName" />
                                <Binding Path="HistoryModeActualSpeedUpRatio" />
                                <Binding Path="HistoryplayTime" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <StackPanel Grid.Row="1"  Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Width="24" Height="24" Margin="5,0,0,0" RenderTransformOrigin="0.5, 0.5" Command="{Binding DecreaseSpeedCommand}">
                            <Path  Stretch="Uniform" Fill="{DynamicResource AccentColorBrush}" Data="M 53.8335,22.1665L 33.1281,38L 53.8335,53.8335L 53.8335,22.1665 Z M 29.4742,23.3844L 22.1665,23.3844L 22.1665,52.6155L 29.4742,52.6155L 29.4742,23.3844 Z "/>
                        </Button>
                        <Button Width="24" Height="24" Margin="5,0,0,0" Command="{Binding PauseSpeedCommand}">
                            <Path Stretch="Uniform" Fill="{DynamicResource AccentColorBrush}" Data="F1 M 26.9167,23.75L 33.25,23.75L 33.25,52.25L 26.9167,52.25L 26.9167,23.75 Z M 42.75,23.75L 49.0833,23.75L 49.0833,52.25L 42.75,52.25L 42.75,23.75 Z "/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SpeedPause}" Value="True">
                                            <Setter  Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Width="24" Height="24" Margin="5,0,0,0" Command="{Binding PauseSpeedCommand}">
                            <Path Stretch="Uniform" Fill="Red" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SpeedPause}" Value="True">
                                            <Setter  Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Width="24" Height="24" Margin="5,0,0,0" Command="{Binding IncreaseSpeedCommand}">
                            <Path Stretch="Uniform" Fill="{DynamicResource AccentColorBrush}" Data="M 22.1665,22.1665L 42.8718,38L 22.1665,53.8335L 22.1665,22.1665 Z M 46.5257,23.3844L 53.8335,23.3844L 53.8335,52.6155L 46.5257,52.6155L 46.5257,23.3844 Z "/>
                        </Button>
                        <Slider x:Name="slider" Foreground='Red' Height="20" Width="200" Margin="5" Value="{Binding HistoryplayProcess}" VerticalAlignment="Center" Style="{DynamicResource FlatSlider}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding HistotyProcessChangedCommand}" CommandParameter="{Binding Value, ElementName=slider}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHistoryRrackingMode}" Value="True">
                                        <Setter  Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>
                    <TextBlock Grid.Row="1" Text="---跟踪当前时间---" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHistoryRrackingMode}" Value="True">
                                        <Setter  Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsShowHistoryplay}" Value="True">
                                <Setter  Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
       
            <Grid.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=toggle,Path=IsChecked}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
        </Grid>      
        
        <ContentControl Grid.Row="1" prism:RegionManager.RegionName="MainBodyRegion"/>

        <ToggleButton x:Name="toggle" Grid.Row="1" Width="32" Height="13" VerticalAlignment="Top" HorizontalAlignment="Center" Style="{DynamicResource ToggleArrowButtonStyle}" ToolTip="折叠展开菜单栏" Margin="1">
            <ToggleButton.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="0" Y="-5"/>
                </TransformGroup>
            </ToggleButton.RenderTransform>
        </ToggleButton>

        <Grid Grid.Row="2" Background="{DynamicResource AccentColorBrush}">
            <StatusBar>
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="0" Background="{x:Null}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Path Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter}}" Data="F1 M 25.3333,23.7501L 28.4999,23.7501L 28.5,33.25L 25.3333,33.2501L 25.3333,23.7501 Z M 30.0833,25.3335L 33.2499,25.3335L 33.25,39.5834L 30.0833,39.5834L 28.5,41.1667L 28.5,50.6667L 25.3333,50.6667L 25.3333,41.1667L 23.75,39.5834L 20.5833,39.5835L 20.5832,25.3335L 23.7499,25.3335L 23.7499,34.8334L 24.5416,34.8334L 29.2916,34.8334L 30.0833,34.8334L 30.0833,25.3335 Z M 30.0833,47.5L 30.0833,44.3334L 50.6667,44.3334L 50.6667,30.0833L 34.8333,30.0834L 34.8333,26.9167L 55.4166,26.9167L 55.4166,47.5L 41.1666,47.5L 41.1667,50.6667L 45.125,50.6667L 45.9166,53.8333L 33.25,53.8333L 34.0417,50.6667L 38,50.6667L 38,47.5L 30.0833,47.5 Z " Stretch="Fill" Fill="Green" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock Text=" 在线" Foreground="Green" VerticalAlignment="Center" Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter}}"/>
                        <Path Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter},ConverterParameter=invert}" Data="F1 M 48.0542,39.5833L 53.0417,44.5708L 58.0291,39.5834L 60.1666,41.7209L 55.1792,46.7083L 60.1667,51.6958L 58.0292,53.8333L 53.0417,48.8458L 48.0542,53.8333L 45.9167,51.6958L 50.9042,46.7083L 45.9167,41.7208L 48.0542,39.5833 Z M 23.7499,23.7501L 26.9166,23.7501L 26.9166,33.25L 23.75,33.2501L 23.7499,23.7501 Z M 28.4999,25.3335L 31.6666,25.3335L 31.6666,39.5835L 28.5,39.5834L 26.9166,41.1667L 26.9166,50.6667L 23.7499,50.6667L 23.75,41.1667L 22.1666,39.5834L 18.9999,39.5835L 18.9999,25.3335L 22.1666,25.3335L 22.1666,34.8334L 22.9583,34.8335L 27.7083,34.8334L 28.5,34.8334L 28.4999,25.3335 Z M 28.5,47.5001L 28.5,44.3334L 45.6792,44.3334L 48.0541,46.7083L 47.2624,47.5001L 39.5833,47.5L 39.5833,50.6667L 43.5416,50.6667L 44.3333,53.8334L 31.6667,53.8334L 32.4583,50.6667L 36.4166,50.6667L 36.4166,47.5L 28.5,47.5001 Z M 49.0833,30.0834L 33.25,30.0834L 33.25,26.9167L 53.8333,26.9167L 53.8332,40.9293L 53.0416,41.7209L 49.0833,37.7625L 49.0833,30.0834 Z " Stretch="Fill" Fill="Red" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock Text=" 离线" Foreground="Red" VerticalAlignment="Center" Visibility="{Binding IsConnected,Converter={StaticResource boolToVisibilityConverter},ConverterParameter=invert}"/>
                        <TextBlock Foreground="White" >
                        <Run>&#160;测点总数</Run>
                        <Run Text="{Binding Count}"/>
                        </TextBlock >
                        <TextBlock Foreground="Pink">
                        <Run>&#160;无效</Run>
                        <Run Text="{Binding AbnormalCount}" />
                        </TextBlock>
                        <TextBlock Foreground="{DynamicResource TextBrush}" >
                        <Run>&#160;正常</Run>
                        <Run Text="{Binding NormalCount}" />
                        </TextBlock>
                        <TextBlock Foreground="Yellow">
                        <Run>&#160;预警</Run>
                        <Run Text="{Binding PreAlertCount}" />
                        </TextBlock>
                        <TextBlock Foreground="DarkOrange">
                        <Run>&#160;警告</Run>
                        <Run Text="{Binding AlertCount}" />
                        </TextBlock>
                        <TextBlock Foreground="Red">
                        <Run>&#160;危险</Run>
                        <Run Text="{Binding DangerCount}" />
                        </TextBlock>
                        <TextBlock Foreground="DarkRed">
                        <Run>&#160;断线</Run>
                        <Run Text="{Binding UnConnectCount}" />
                        </TextBlock>
                        <ToggleButton x:Name="mutebtn" IsChecked="{Binding Mute}" FontSize="20" Template="{StaticResource SoundToggleButton}" Margin="2,0,0,0"/>
                    </StackPanel>
                </StatusBarItem>
                <Separator  Grid.Column="1" Style="{StaticResource MetroStatusBarSeparator}" />
                <StatusBarItem Grid.Column="2" Visibility="Visible" >
                    <StatusBarItem.Style>
                        <Style TargetType="StatusBarItem">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </StatusBarItem.Style>
                    <StackPanel Orientation="Horizontal" >
                        <ListView ItemsSource="{Binding DangerList}" Background="Transparent" BorderBrush="Transparent">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Ellipse x:Name="ellipse" Width="12" Height="12" Fill="Red" VerticalAlignment="Center">
                                            <Ellipse.Triggers>
                                                <EventTrigger RoutedEvent="Window.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard RepeatBehavior="Forever" >
                                                            <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Ellipse.Triggers>
                                        </Ellipse>
                                        <TextBlock VerticalAlignment="Center"> <Hyperlink Command="{Binding DataContext.DangerListClickCommmad, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}" CommandParameter="{Binding}" Foreground="Red"> <TextBlock Text="{Binding ItemName}"/> </Hyperlink></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                      
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem Grid.Column="3">
                    <TextBlock ToolTip="报警栏详情" VerticalAlignment="Center"> <Hyperlink Command="{Binding DangerListDetailCommmad}" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="..."/> </Hyperlink></TextBlock>
                </StatusBarItem>
                <StatusBarItem Grid.Column="4" Visibility="Collapsed">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="ellipse" Width="12" Height="12" Fill="Red">
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Window.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" >
                                            <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <TextBlock  VerticalAlignment="Center"> <Hyperlink Command="{Binding AlarmListCommmad}"> <TextBlock Text="报警列表"/> </Hyperlink></TextBlock>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem Grid.Column="5" Visibility="{Binding ExceptListVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="ellipse2" Width="12" Height="12" Fill="Yellow">
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Window.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" >
                                            <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <TextBlock  VerticalAlignment="Center"> <Hyperlink Command="{Binding ExceptListCommmad}" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="异常列表"/> </Hyperlink></TextBlock>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem  Grid.Column="6" Content="{Binding NowTime}" HorizontalAlignment="Right" />
            </StatusBar>
        </Grid>
    </Grid>
</UserControl>
