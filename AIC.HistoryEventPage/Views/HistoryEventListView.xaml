<UserControl x:Class="AIC.HistoryEventPage.Views.HistoryEventListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"        
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:timeTool= "clr-namespace:Loya.Dameer;assembly=Loya.Dameer"
             xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
             xmlns:coreType="clr-namespace:AIC.CoreType;assembly=AIC.CoreType"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <core:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
            <DataTemplate x:Key="enumComboItemTemplate">
                <TextBlock Text="{Binding Path=., Converter={StaticResource ResourceKey=enumDescriptionConverter}}" />
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>           
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <RadioButton x:Name="chkreal" Content="实时模式" Style="{StaticResource RadioButtonStyle}" IsChecked="{Binding IsRealTime,Mode=TwoWay}"/>
            <RadioButton Content="查询模式" Style="{StaticResource RadioButtonStyle}" />
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{DynamicResource name}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                <TextBox Text="{Binding SearchName}" Margin="4,0,0,0" Style="{DynamicResource MetroTextBox}" Width="100" VerticalAlignment="Center" />
                <TextBlock Text="事件类型" Margin="4,0,0,0" VerticalAlignment="Center"/>
                <ComboBox IsEditable="False" Width="120" ItemTemplate="{StaticResource ResourceKey=enumComboItemTemplate}" core:EnumHelper.Enum="{x:Type coreType:CustomSystemType}" SelectedItem="{Binding CustomSystemType}" Style="{DynamicResource VirtualisedMetroComboBox}" VerticalAlignment="Center"/>
                <TextBlock Text="{DynamicResource operateDateTime}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                <timeTool:Dameer Format="Custom" CustomFormat="yyyy-MM-dd HH:mm:ss" ShowCheckBox="False" Value="{Binding SearchStartTime}" VerticalAlignment="Center" />
                <TextBlock Text="{DynamicResource end}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                <timeTool:Dameer Format="Custom" CustomFormat="yyyy-MM-dd HH:mm:ss" ShowCheckBox="False" Value="{Binding SearchEndTime}" VerticalAlignment="Center"/>
                <Button  Command="{Binding QueryCommand}" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="4,0,0,0"  >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" Source="/AIC.Resources;component/Images/search.png"  />
                            <TextBlock Text="{DynamicResource search}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=chkreal}" Value="false">
                                <Setter  Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
        </StackPanel>
        <DataGrid x:Name="table" Grid.Row="1" AutoGenerateColumns="False" FrozenColumnCount="1" IsReadOnly="True" ColumnWidth="*"
                  ItemsSource="{Binding CustomSystemExceptionView}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding id}" MinWidth="60"></DataGridTextColumn>
                <DataGridTextColumn Header="类型" Binding="{Binding Type,Converter={StaticResource enumDescriptionConverter}}" MinWidth="60"></DataGridTextColumn>
                <DataGridTextColumn Header="程度" Binding="{Binding Degree,Converter={StaticResource enumDescriptionConverter}}" MinWidth="60"></DataGridTextColumn>
                <DataGridTextColumn Header="发生时间" Binding="{Binding EventTime}" MinWidth="60"></DataGridTextColumn>
                <DataGridTextColumn Header="详情" Binding="{Binding Remarks}" MinWidth="60"></DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MetroDataGridCell}"
                       TargetType="{x:Type DataGridCell}">

                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MetroDataGridRow}"
                       TargetType="{x:Type DataGridRow}">

                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <!--<Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />-->
                </Style>
            </DataGrid.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=table}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
     
    </Grid>
</UserControl>
