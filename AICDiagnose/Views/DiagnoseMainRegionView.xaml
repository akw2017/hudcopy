<UserControl x:Class="AICDiagnose.Views.DiagnoseMainRegionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AICDiagnose.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:menu="clr-namespace:AIC.Core.ControlModels;assembly=AIC.Core"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:core="clr-namespace:AIC.Core;assembly=AIC.Core"
             Style="{DynamicResource AsyncWorkUserControlStyle}"
             mc:Ignorable="d" 
             x:Name="usercontrol"
             d:DesignHeight="300" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <core:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <Style TargetType="{x:Type Controls:WindowButtonCommands}">
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="Height"
                        Value="24" />
            </Style>
            <Ellipse x:Key="AppThemeMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     StrokeThickness="1"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Ellipse x:Key="AccentMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
            <Style x:Key="AppThemeMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon"
                        Value="{StaticResource AppThemeMenuIcon}" />
                <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
            </Style>
            <Style x:Key="AccentColorMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
                <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
                <Setter Property="Icon"
                        Value="{StaticResource AccentMenuIcon}" />
                <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
            </Style>
        
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="grid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Background="{DynamicResource AccentColorBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Menu Background="Transparent" HorizontalAlignment="Left" MouseEnter="Menu_MouseEnter" MouseLeave="Menu_MouseLeave">
                <MenuItem Header="{DynamicResource menuDiagnose}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuHistoryDataDiagram}" Command="{Binding NavigateCommand}" CommandParameter="MenuHistoryDataDiagram" Visibility="{Binding MenuManageList.MenuHistoryDataDiagram.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuHistoryDataDiagram.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuDeviceFaultDiagnose}" Command="{Binding NavigateCommand}" CommandParameter="MenuDeviceFaultDiagnose" Visibility="{Binding MenuManageList.MenuDeviceFaultDiagnose.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuDeviceFaultDiagnose.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuEditDeviceComponents}" Command="{Binding NavigateCommand}" CommandParameter="MenuEditDeviceComponents" Visibility="{Binding MenuManageList.MenuEditDeviceComponents.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuEditDeviceComponents.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuEditDeviceTemplate}" Command="{Binding NavigateCommand}" CommandParameter="MenuEditDeviceTemplate" Visibility="{Binding MenuManageList.MenuEditDeviceTemplate.Visibility}">
                        <MenuItem.Icon>
                            <Image Source="{Binding MenuManageList.MenuEditDeviceTemplate.IconPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource menuGeneralManage}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuLogout}" Command="{Binding LogoutCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/user_delete.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuExit}" Command="{Binding ExitCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/export.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuLock}" Command="{Binding LockCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/lock.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuUnLock}" Command="{Binding UnLockCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/lock_open.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource menuSystemManage}" Background="{DynamicResource TransparentWhiteBrush}">
                    <MenuItem Header="{DynamicResource menuTheme}" Background="{DynamicResource TransparentWhiteBrush}"                         
                          ItemsSource="{Binding AppThemes, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AppThemeMenuItemStyle}">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="/AIC.Resources;component/Images/color.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuStyle}" Background="{DynamicResource TransparentWhiteBrush}"                         
                          ItemsSource="{Binding AccentColors, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AccentColorMenuItemStyle}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/color_swatch.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuWindow}" Background="{DynamicResource TransparentWhiteBrush}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/application_edit.png"/>
                        </MenuItem.Icon>
                        <MenuItem IsCheckable="True" Header="{DynamicResource menuShowInTaskbar}"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=ShowInTaskbar}" />
                        <MenuItem IsCheckable="True" Header="{DynamicResource menuTopmost}"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=Topmost}" />
                        <MenuItem IsCheckable="True" Header="{DynamicResource menuMaximizeFullScreen}"
                              IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=IgnoreTaskbarOnMaximize}" />
                        <MenuItem Header="关闭打开窗口" Command="{Binding CloseWindowsCommand}"/>

                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuLanguage}" >
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/arrow_switch.png"/>
                        </MenuItem.Icon>
                        <MenuItem Header="{DynamicResource menuChinese}" IsCheckable="True" IsChecked="{Binding ChineseChecked}" />
                        <MenuItem Header="{DynamicResource menuEnglish}" IsCheckable="True" IsChecked="{Binding EnglishChecked}"/>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuLocalSetting}" Command="{Binding SettingCommmad}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/wrench_orange.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuAboutVersion}" Command="{Binding AboutVersionCommmad}">
                        <MenuItem.Icon>
                            <Image Height="16" Width="16" Source="/AIC.Resources;component/Images/001_15.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuAbnormalList}" Command="{Binding AbnormalListCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/table_error.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuSystemLog}" Command="{Binding SystemLogCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/folder_error.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource menuScreenShotFile}" Command="{Binding ScreenShotFolderCommand}">
                        <MenuItem.Icon>
                            <Image Source="/AIC.Resources;component/Images/folder_picture.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right"  >
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="MenuRefreshData" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="{DynamicResource refresh}"/> </Hyperlink></TextBlock>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0" MouseEnter="Menu_MouseEnter" MouseLeave="Menu_MouseLeave"> <Hyperlink Click="ScreenShot_Click" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="{DynamicResource screenShot}"/> </Hyperlink></TextBlock>
                <ToggleButton IsChecked="{Binding Pause}" Visibility="Collapsed" VerticalAlignment="Center" Margin="5,0" Padding="0" FontSize="15" Cursor="Hand" Template="{StaticResource ToggleTextButton}" Foreground="{DynamicResource TextBrush}" Content="{DynamicResource pause}"/>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <Hyperlink Command="{Binding EditPwdCommand}" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="修改密码"/> </Hyperlink></TextBlock>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <Hyperlink Command="{Binding LogoutCommand}" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="注销"/> </Hyperlink></TextBlock>
                <TextBlock Visibility="{Binding LoginVisibility}" VerticalAlignment="Center" Margin="5,0"> <TextBlock Text="{Binding LoginUser}"/></TextBlock>
            </StackPanel>

            <Grid Grid.Row="1">
                <TextBlock FontSize="16" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="2" Text="版权所有Copyright©2017：北京航天智控监测技术研究院"/>
            </Grid>

            <Grid.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=toggle,Path=IsChecked}" Value="true">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
        </Grid>      
        
        <ContentControl Grid.Row="1" prism:RegionManager.RegionName="MainBodyRegion"/>

        <ToggleButton x:Name="toggle" Grid.Row="1" Width="32" Height="13" VerticalAlignment="Top" HorizontalAlignment="Center" Style="{DynamicResource ToggleArrowButtonStyle}" ToolTip="折叠展开菜单栏" Margin="1">
            <ToggleButton.RenderTransform>
                <TransformGroup>
                    <TranslateTransform X="0" Y="-5"/>
                </TransformGroup>
            </ToggleButton.RenderTransform>
        </ToggleButton>

        <Grid Grid.Row="2" Background="{DynamicResource AccentColorBrush}">
            <StatusBar>
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem Grid.Column="5" Visibility="{Binding ExceptListVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="ellipse2" Width="12" Height="12" Fill="Yellow">
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Window.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" >
                                            <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <TextBlock  VerticalAlignment="Center"> <Hyperlink Command="{Binding ExceptListCommmad}" Foreground="{DynamicResource TextBrush}"> <TextBlock Text="异常列表"/> </Hyperlink></TextBlock>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem  Grid.Column="6" Content="{Binding NowTime}" HorizontalAlignment="Right" />
            </StatusBar>
        </Grid>
    </Grid>
</UserControl>
